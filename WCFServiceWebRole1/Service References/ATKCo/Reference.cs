//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceWebRole.ATKCo {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColloquialConverterErrorCode", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum ColloquialConverterErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNonInitialized = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAccessDenied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorQuotaExceeded = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAuthentication = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMaxLengthExceeded = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorUnknown = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ColloquialWordMap", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class ColloquialWordMap : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColloquialWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKCo.Translation[] TranslationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Word {
            get {
                return this.WordField;
            }
            set {
                if ((object.ReferenceEquals(this.WordField, value) != true)) {
                    this.WordField = value;
                    this.RaisePropertyChanged("Word");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ColloquialWord {
            get {
                return this.ColloquialWordField;
            }
            set {
                if ((object.ReferenceEquals(this.ColloquialWordField, value) != true)) {
                    this.ColloquialWordField = value;
                    this.RaisePropertyChanged("ColloquialWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATKCo.Translation[] Translations {
            get {
                return this.TranslationsField;
            }
            set {
                if ((object.ReferenceEquals(this.TranslationsField, value) != true)) {
                    this.TranslationsField = value;
                    this.RaisePropertyChanged("Translations");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Translation", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class Translation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKCo.Analysis WordAnalysisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKCo.Analysis ColloquialAnalysisField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Word {
            get {
                return this.WordField;
            }
            set {
                if ((object.ReferenceEquals(this.WordField, value) != true)) {
                    this.WordField = value;
                    this.RaisePropertyChanged("Word");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WCFServiceWebRole.ATKCo.Analysis WordAnalysis {
            get {
                return this.WordAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.WordAnalysisField, value) != true)) {
                    this.WordAnalysisField = value;
                    this.RaisePropertyChanged("WordAnalysis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATKCo.Analysis ColloquialAnalysis {
            get {
                return this.ColloquialAnalysisField;
            }
            set {
                if ((object.ReferenceEquals(this.ColloquialAnalysisField, value) != true)) {
                    this.ColloquialAnalysisField = value;
                    this.RaisePropertyChanged("ColloquialAnalysis");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Analysis", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class Analysis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private float ProbabilityField;
        
        private int NominativeNunatableField;
        
        private int GeneativeNunatableField;
        
        private int AccusativeNunatableField;
        
        private int NunatableField;
        
        private int TitleField;
        
        private int ProperNameField;
        
        private int BorrowedWordField;
        
        private int NunationField;
        
        private int DefinitiveALField;
        
        private ushort CaseEndingField;
        
        private ushort Suffix3Field;
        
        private ushort Suffix2Field;
        
        private ushort Suffix1Field;
        
        private ushort Prefix3Field;
        
        private ushort Prefix2Field;
        
        private ushort Prefix1Field;
        
        private ushort PosField;
        
        private ulong MorphSyntacticFeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiacTokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public float Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public int NominativeNunatable {
            get {
                return this.NominativeNunatableField;
            }
            set {
                if ((this.NominativeNunatableField.Equals(value) != true)) {
                    this.NominativeNunatableField = value;
                    this.RaisePropertyChanged("NominativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public int GeneativeNunatable {
            get {
                return this.GeneativeNunatableField;
            }
            set {
                if ((this.GeneativeNunatableField.Equals(value) != true)) {
                    this.GeneativeNunatableField = value;
                    this.RaisePropertyChanged("GeneativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int AccusativeNunatable {
            get {
                return this.AccusativeNunatableField;
            }
            set {
                if ((this.AccusativeNunatableField.Equals(value) != true)) {
                    this.AccusativeNunatableField = value;
                    this.RaisePropertyChanged("AccusativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int Nunatable {
            get {
                return this.NunatableField;
            }
            set {
                if ((this.NunatableField.Equals(value) != true)) {
                    this.NunatableField = value;
                    this.RaisePropertyChanged("Nunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int Title {
            get {
                return this.TitleField;
            }
            set {
                if ((this.TitleField.Equals(value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int ProperName {
            get {
                return this.ProperNameField;
            }
            set {
                if ((this.ProperNameField.Equals(value) != true)) {
                    this.ProperNameField = value;
                    this.RaisePropertyChanged("ProperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public int BorrowedWord {
            get {
                return this.BorrowedWordField;
            }
            set {
                if ((this.BorrowedWordField.Equals(value) != true)) {
                    this.BorrowedWordField = value;
                    this.RaisePropertyChanged("BorrowedWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public int Nunation {
            get {
                return this.NunationField;
            }
            set {
                if ((this.NunationField.Equals(value) != true)) {
                    this.NunationField = value;
                    this.RaisePropertyChanged("Nunation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public int DefinitiveAL {
            get {
                return this.DefinitiveALField;
            }
            set {
                if ((this.DefinitiveALField.Equals(value) != true)) {
                    this.DefinitiveALField = value;
                    this.RaisePropertyChanged("DefinitiveAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public ushort CaseEnding {
            get {
                return this.CaseEndingField;
            }
            set {
                if ((this.CaseEndingField.Equals(value) != true)) {
                    this.CaseEndingField = value;
                    this.RaisePropertyChanged("CaseEnding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public ushort Suffix3 {
            get {
                return this.Suffix3Field;
            }
            set {
                if ((this.Suffix3Field.Equals(value) != true)) {
                    this.Suffix3Field = value;
                    this.RaisePropertyChanged("Suffix3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public ushort Suffix2 {
            get {
                return this.Suffix2Field;
            }
            set {
                if ((this.Suffix2Field.Equals(value) != true)) {
                    this.Suffix2Field = value;
                    this.RaisePropertyChanged("Suffix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public ushort Suffix1 {
            get {
                return this.Suffix1Field;
            }
            set {
                if ((this.Suffix1Field.Equals(value) != true)) {
                    this.Suffix1Field = value;
                    this.RaisePropertyChanged("Suffix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public ushort Prefix3 {
            get {
                return this.Prefix3Field;
            }
            set {
                if ((this.Prefix3Field.Equals(value) != true)) {
                    this.Prefix3Field = value;
                    this.RaisePropertyChanged("Prefix3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public ushort Prefix2 {
            get {
                return this.Prefix2Field;
            }
            set {
                if ((this.Prefix2Field.Equals(value) != true)) {
                    this.Prefix2Field = value;
                    this.RaisePropertyChanged("Prefix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public ushort Prefix1 {
            get {
                return this.Prefix1Field;
            }
            set {
                if ((this.Prefix1Field.Equals(value) != true)) {
                    this.Prefix1Field = value;
                    this.RaisePropertyChanged("Prefix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public ushort Pos {
            get {
                return this.PosField;
            }
            set {
                if ((this.PosField.Equals(value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public ulong MorphSyntacticFeatures {
            get {
                return this.MorphSyntacticFeaturesField;
            }
            set {
                if ((this.MorphSyntacticFeaturesField.Equals(value) != true)) {
                    this.MorphSyntacticFeaturesField = value;
                    this.RaisePropertyChanged("MorphSyntacticFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=19)]
        public string Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((object.ReferenceEquals(this.PatternField, value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=20)]
        public string Root {
            get {
                return this.RootField;
            }
            set {
                if ((object.ReferenceEquals(this.RootField, value) != true)) {
                    this.RootField = value;
                    this.RaisePropertyChanged("Root");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=21)]
        public string Stem {
            get {
                return this.StemField;
            }
            set {
                if ((object.ReferenceEquals(this.StemField, value) != true)) {
                    this.StemField = value;
                    this.RaisePropertyChanged("Stem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=22)]
        public string DiacToken {
            get {
                return this.DiacTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.DiacTokenField, value) != true)) {
                    this.DiacTokenField = value;
                    this.RaisePropertyChanged("DiacToken");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://nlptoolkit.cloudapp.net", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nlptoolkit.cloudapp.net", ConfigurationName="ATKCo.IColloquialConverterService")]
    public interface IColloquialConverterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertText", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextResponse")]
        WCFServiceWebRole.ATKCo.ConvertTextResponse ConvertText(WCFServiceWebRole.ATKCo.ConvertTextRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertText", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextResponse> ConvertTextAsync(WCFServiceWebRole.ATKCo.ConvertTextRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextWithDetails" +
            "", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextWithDetails" +
            "Response")]
        WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse ConvertTextWithDetails(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextWithDetails" +
            "", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertTextWithDetails" +
            "Response")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse> ConvertTextWithDetailsAsync(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertWord", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertWordResponse")]
        WCFServiceWebRole.ATKCo.ConvertWordResponse ConvertWord(WCFServiceWebRole.ATKCo.ConvertWordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertWord", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/ConvertWordResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertWordResponse> ConvertWordAsync(WCFServiceWebRole.ATKCo.ConvertWordRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/SuggestConversion", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/SuggestConversionRespo" +
            "nse")]
        WCFServiceWebRole.ATKCo.SuggestConversionResponse SuggestConversion(WCFServiceWebRole.ATKCo.SuggestConversionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IColloquialConverterService/SuggestConversion", ReplyAction="http://nlptoolkit.cloudapp.net/IColloquialConverterService/SuggestConversionRespo" +
            "nse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.SuggestConversionResponse> SuggestConversionAsync(WCFServiceWebRole.ATKCo.SuggestConversionRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertTextRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertText", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertTextRequestBody Body;
        
        public ConvertTextRequest() {
        }
        
        public ConvertTextRequest(WCFServiceWebRole.ATKCo.ConvertTextRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertTextRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string inText;
        
        public ConvertTextRequestBody() {
        }
        
        public ConvertTextRequestBody(string appId, string inText) {
            this.appId = appId;
            this.inText = inText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertTextResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertTextResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertTextResponseBody Body;
        
        public ConvertTextResponse() {
        }
        
        public ConvertTextResponse(WCFServiceWebRole.ATKCo.ConvertTextResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertTextResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertTextResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string outText;
        
        public ConvertTextResponseBody() {
        }
        
        public ConvertTextResponseBody(WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertTextResult, string outText) {
            this.ConvertTextResult = ConvertTextResult;
            this.outText = outText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertTextWithDetailsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertTextWithDetails", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequestBody Body;
        
        public ConvertTextWithDetailsRequest() {
        }
        
        public ConvertTextWithDetailsRequest(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertTextWithDetailsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string inText;
        
        public ConvertTextWithDetailsRequestBody() {
        }
        
        public ConvertTextWithDetailsRequestBody(string appId, string inText) {
            this.appId = appId;
            this.inText = inText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertTextWithDetailsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertTextWithDetailsResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponseBody Body;
        
        public ConvertTextWithDetailsResponse() {
        }
        
        public ConvertTextWithDetailsResponse(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertTextWithDetailsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertTextWithDetailsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string outText;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATKCo.ColloquialWordMap[] words;
        
        public ConvertTextWithDetailsResponseBody() {
        }
        
        public ConvertTextWithDetailsResponseBody(WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertTextWithDetailsResult, string outText, WCFServiceWebRole.ATKCo.ColloquialWordMap[] words) {
            this.ConvertTextWithDetailsResult = ConvertTextWithDetailsResult;
            this.outText = outText;
            this.words = words;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertWordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertWord", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertWordRequestBody Body;
        
        public ConvertWordRequest() {
        }
        
        public ConvertWordRequest(WCFServiceWebRole.ATKCo.ConvertWordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertWordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string word;
        
        public ConvertWordRequestBody() {
        }
        
        public ConvertWordRequestBody(string appId, string word) {
            this.appId = appId;
            this.word = word;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ConvertWordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ConvertWordResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.ConvertWordResponseBody Body;
        
        public ConvertWordResponse() {
        }
        
        public ConvertWordResponse(WCFServiceWebRole.ATKCo.ConvertWordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ConvertWordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertWordResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATKCo.ArrayOfString translations;
        
        public ConvertWordResponseBody() {
        }
        
        public ConvertWordResponseBody(WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertWordResult, WCFServiceWebRole.ATKCo.ArrayOfString translations) {
            this.ConvertWordResult = ConvertWordResult;
            this.translations = translations;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestConversionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestConversion", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.SuggestConversionRequestBody Body;
        
        public SuggestConversionRequest() {
        }
        
        public SuggestConversionRequest(WCFServiceWebRole.ATKCo.SuggestConversionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestConversionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string inText;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string suggestedText;
        
        public SuggestConversionRequestBody() {
        }
        
        public SuggestConversionRequestBody(string appId, string inText, string suggestedText) {
            this.appId = appId;
            this.inText = inText;
            this.suggestedText = suggestedText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestConversionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestConversionResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKCo.SuggestConversionResponseBody Body;
        
        public SuggestConversionResponse() {
        }
        
        public SuggestConversionResponse(WCFServiceWebRole.ATKCo.SuggestConversionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestConversionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode SuggestConversionResult;
        
        public SuggestConversionResponseBody() {
        }
        
        public SuggestConversionResponseBody(WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode SuggestConversionResult) {
            this.SuggestConversionResult = SuggestConversionResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IColloquialConverterServiceChannel : WCFServiceWebRole.ATKCo.IColloquialConverterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ColloquialConverterServiceClient : System.ServiceModel.ClientBase<WCFServiceWebRole.ATKCo.IColloquialConverterService>, WCFServiceWebRole.ATKCo.IColloquialConverterService {
        
        public ColloquialConverterServiceClient() {
        }
        
        public ColloquialConverterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ColloquialConverterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ColloquialConverterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ColloquialConverterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKCo.ConvertTextResponse WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertText(WCFServiceWebRole.ATKCo.ConvertTextRequest request) {
            return base.Channel.ConvertText(request);
        }
        
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertText(string appId, string inText, out string outText) {
            WCFServiceWebRole.ATKCo.ConvertTextRequest inValue = new WCFServiceWebRole.ATKCo.ConvertTextRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertTextRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            WCFServiceWebRole.ATKCo.ConvertTextResponse retVal = ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertText(inValue);
            outText = retVal.Body.outText;
            return retVal.Body.ConvertTextResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextResponse> WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertTextAsync(WCFServiceWebRole.ATKCo.ConvertTextRequest request) {
            return base.Channel.ConvertTextAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextResponse> ConvertTextAsync(string appId, string inText) {
            WCFServiceWebRole.ATKCo.ConvertTextRequest inValue = new WCFServiceWebRole.ATKCo.ConvertTextRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertTextRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            return ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertTextAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertTextWithDetails(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest request) {
            return base.Channel.ConvertTextWithDetails(request);
        }
        
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertTextWithDetails(string appId, string inText, out string outText, out WCFServiceWebRole.ATKCo.ColloquialWordMap[] words) {
            WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest inValue = new WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse retVal = ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertTextWithDetails(inValue);
            outText = retVal.Body.outText;
            words = retVal.Body.words;
            return retVal.Body.ConvertTextWithDetailsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse> WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertTextWithDetailsAsync(WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest request) {
            return base.Channel.ConvertTextWithDetailsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertTextWithDetailsResponse> ConvertTextWithDetailsAsync(string appId, string inText) {
            WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest inValue = new WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertTextWithDetailsRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            return ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertTextWithDetailsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKCo.ConvertWordResponse WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertWord(WCFServiceWebRole.ATKCo.ConvertWordRequest request) {
            return base.Channel.ConvertWord(request);
        }
        
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode ConvertWord(string appId, string word, out WCFServiceWebRole.ATKCo.ArrayOfString translations) {
            WCFServiceWebRole.ATKCo.ConvertWordRequest inValue = new WCFServiceWebRole.ATKCo.ConvertWordRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            WCFServiceWebRole.ATKCo.ConvertWordResponse retVal = ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertWord(inValue);
            translations = retVal.Body.translations;
            return retVal.Body.ConvertWordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertWordResponse> WCFServiceWebRole.ATKCo.IColloquialConverterService.ConvertWordAsync(WCFServiceWebRole.ATKCo.ConvertWordRequest request) {
            return base.Channel.ConvertWordAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.ConvertWordResponse> ConvertWordAsync(string appId, string word) {
            WCFServiceWebRole.ATKCo.ConvertWordRequest inValue = new WCFServiceWebRole.ATKCo.ConvertWordRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.ConvertWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            return ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).ConvertWordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKCo.SuggestConversionResponse WCFServiceWebRole.ATKCo.IColloquialConverterService.SuggestConversion(WCFServiceWebRole.ATKCo.SuggestConversionRequest request) {
            return base.Channel.SuggestConversion(request);
        }
        
        public WCFServiceWebRole.ATKCo.ColloquialConverterErrorCode SuggestConversion(string appId, string inText, string suggestedText) {
            WCFServiceWebRole.ATKCo.SuggestConversionRequest inValue = new WCFServiceWebRole.ATKCo.SuggestConversionRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.SuggestConversionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            inValue.Body.suggestedText = suggestedText;
            WCFServiceWebRole.ATKCo.SuggestConversionResponse retVal = ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).SuggestConversion(inValue);
            return retVal.Body.SuggestConversionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.SuggestConversionResponse> WCFServiceWebRole.ATKCo.IColloquialConverterService.SuggestConversionAsync(WCFServiceWebRole.ATKCo.SuggestConversionRequest request) {
            return base.Channel.SuggestConversionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKCo.SuggestConversionResponse> SuggestConversionAsync(string appId, string inText, string suggestedText) {
            WCFServiceWebRole.ATKCo.SuggestConversionRequest inValue = new WCFServiceWebRole.ATKCo.SuggestConversionRequest();
            inValue.Body = new WCFServiceWebRole.ATKCo.SuggestConversionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inText = inText;
            inValue.Body.suggestedText = suggestedText;
            return ((WCFServiceWebRole.ATKCo.IColloquialConverterService)(this)).SuggestConversionAsync(inValue);
        }
    }
}
