//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceWebRole.ATKNER {
    using System;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.FlagsAttribute()]
    [System.Runtime.Serialization.DataContractAttribute(Name="NEROption", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum NEROption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAutoCorrector = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSpeller = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseRules = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseGazetteers = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseStatisticalSequenceLabeling = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseSubstringMatching = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseVoting = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UseAllComponents = 128,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NERErrorCode", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum NERErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNonInitialized = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAccessDenied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorQuotaExceeded = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAuthentication = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMaxLengthExceeded = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInvalidNEROption = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInvalidLanguage = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorUnknown = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedEntity", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class NamedEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamedEntityPhraseField;
        
        private uint StartPositionField;
        
        private uint LengthField;
        
        private double ConfidenceField;
        
        private WCFServiceWebRole.ATKNER.NamedEntityType NamedEntityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKNER.Word[] NamedEntityWordsField;
        
        private int SentenceIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string NamedEntityPhrase {
            get {
                return this.NamedEntityPhraseField;
            }
            set {
                if ((object.ReferenceEquals(this.NamedEntityPhraseField, value) != true)) {
                    this.NamedEntityPhraseField = value;
                    this.RaisePropertyChanged("NamedEntityPhrase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint StartPosition {
            get {
                return this.StartPositionField;
            }
            set {
                if ((this.StartPositionField.Equals(value) != true)) {
                    this.StartPositionField = value;
                    this.RaisePropertyChanged("StartPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public uint Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public double Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public WCFServiceWebRole.ATKNER.NamedEntityType NamedEntityType {
            get {
                return this.NamedEntityTypeField;
            }
            set {
                if ((this.NamedEntityTypeField.Equals(value) != true)) {
                    this.NamedEntityTypeField = value;
                    this.RaisePropertyChanged("NamedEntityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public WCFServiceWebRole.ATKNER.Word[] NamedEntityWords {
            get {
                return this.NamedEntityWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.NamedEntityWordsField, value) != true)) {
                    this.NamedEntityWordsField = value;
                    this.RaisePropertyChanged("NamedEntityWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public int SentenceId {
            get {
                return this.SentenceIdField;
            }
            set {
                if ((this.SentenceIdField.Equals(value) != true)) {
                    this.SentenceIdField = value;
                    this.RaisePropertyChanged("SentenceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NamedEntityType", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum NamedEntityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Human = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Organization = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotNamedEntity = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Word", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class Word : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WordStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NormalizedWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKNER.FlagCollection FlagsField;
        
        private int PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string WordString {
            get {
                return this.WordStringField;
            }
            set {
                if ((object.ReferenceEquals(this.WordStringField, value) != true)) {
                    this.WordStringField = value;
                    this.RaisePropertyChanged("WordString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string NormalizedWord {
            get {
                return this.NormalizedWordField;
            }
            set {
                if ((object.ReferenceEquals(this.NormalizedWordField, value) != true)) {
                    this.NormalizedWordField = value;
                    this.RaisePropertyChanged("NormalizedWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATKNER.FlagCollection Flags {
            get {
                return this.FlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagsField, value) != true)) {
                    this.FlagsField = value;
                    this.RaisePropertyChanged("Flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlagCollection", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class FlagCollection : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFServiceWebRole.ATKNER.FlagInfo[] ItemsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WCFServiceWebRole.ATKNER.FlagInfo[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FlagInfo", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class FlagInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlagField;
        
        private int RuleIndexField;
        
        private double ConfidenceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Flag {
            get {
                return this.FlagField;
            }
            set {
                if ((object.ReferenceEquals(this.FlagField, value) != true)) {
                    this.FlagField = value;
                    this.RaisePropertyChanged("Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int RuleIndex {
            get {
                return this.RuleIndexField;
            }
            set {
                if ((this.RuleIndexField.Equals(value) != true)) {
                    this.RuleIndexField = value;
                    this.RaisePropertyChanged("RuleIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public double Confidence {
            get {
                return this.ConfidenceField;
            }
            set {
                if ((this.ConfidenceField.Equals(value) != true)) {
                    this.ConfidenceField = value;
                    this.RaisePropertyChanged("Confidence");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nlptoolkit.cloudapp.net", ConfigurationName="ATKNER.IANERService")]
    public interface IANERService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/GetArabicNamedEntities", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/GetArabicNamedEntitiesResponse")]
        WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse GetArabicNamedEntities(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/GetArabicNamedEntities", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/GetArabicNamedEntitiesResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse> GetArabicNamedEntitiesAsync(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/SuggestMissingNamedEntity", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/SuggestMissingNamedEntityResponse")]
        WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse SuggestMissingNamedEntity(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/SuggestMissingNamedEntity", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/SuggestMissingNamedEntityResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse> SuggestMissingNamedEntityAsync(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/ReportWronglyDetectedNamedEntity", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/ReportWronglyDetectedNamedEntityRespo" +
            "nse")]
        WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse ReportWronglyDetectedNamedEntity(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/IANERService/ReportWronglyDetectedNamedEntity", ReplyAction="http://nlptoolkit.cloudapp.net/IANERService/ReportWronglyDetectedNamedEntityRespo" +
            "nse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse> ReportWronglyDetectedNamedEntityAsync(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetArabicNamedEntitiesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetArabicNamedEntities", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequestBody Body;
        
        public GetArabicNamedEntitiesRequest() {
        }
        
        public GetArabicNamedEntitiesRequest(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetArabicNamedEntitiesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string arabicText;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATKNER.NEROption options;
        
        public GetArabicNamedEntitiesRequestBody() {
        }
        
        public GetArabicNamedEntitiesRequestBody(string appId, string arabicText, WCFServiceWebRole.ATKNER.NEROption options) {
            this.appId = appId;
            this.arabicText = arabicText;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetArabicNamedEntitiesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetArabicNamedEntitiesResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponseBody Body;
        
        public GetArabicNamedEntitiesResponse() {
        }
        
        public GetArabicNamedEntitiesResponse(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetArabicNamedEntitiesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKNER.NERErrorCode GetArabicNamedEntitiesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATKNER.NamedEntity[] namedEntities;
        
        public GetArabicNamedEntitiesResponseBody() {
        }
        
        public GetArabicNamedEntitiesResponseBody(WCFServiceWebRole.ATKNER.NERErrorCode GetArabicNamedEntitiesResult, WCFServiceWebRole.ATKNER.NamedEntity[] namedEntities) {
            this.GetArabicNamedEntitiesResult = GetArabicNamedEntitiesResult;
            this.namedEntities = namedEntities;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingNamedEntityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingNamedEntity", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequestBody Body;
        
        public SuggestMissingNamedEntityRequest() {
        }
        
        public SuggestMissingNamedEntityRequest(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingNamedEntityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string namedEntity;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public WCFServiceWebRole.ATKNER.NamedEntityType namedEntityType;
        
        public SuggestMissingNamedEntityRequestBody() {
        }
        
        public SuggestMissingNamedEntityRequestBody(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType namedEntityType) {
            this.appId = appId;
            this.namedEntity = namedEntity;
            this.context = context;
            this.namedEntityType = namedEntityType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingNamedEntityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingNamedEntityResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponseBody Body;
        
        public SuggestMissingNamedEntityResponse() {
        }
        
        public SuggestMissingNamedEntityResponse(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingNamedEntityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKNER.NERErrorCode SuggestMissingNamedEntityResult;
        
        public SuggestMissingNamedEntityResponseBody() {
        }
        
        public SuggestMissingNamedEntityResponseBody(WCFServiceWebRole.ATKNER.NERErrorCode SuggestMissingNamedEntityResult) {
            this.SuggestMissingNamedEntityResult = SuggestMissingNamedEntityResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWronglyDetectedNamedEntityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWronglyDetectedNamedEntity", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequestBody Body;
        
        public ReportWronglyDetectedNamedEntityRequest() {
        }
        
        public ReportWronglyDetectedNamedEntityRequest(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWronglyDetectedNamedEntityRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string namedEntity;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public WCFServiceWebRole.ATKNER.NamedEntityType wrongNamedEntityType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public WCFServiceWebRole.ATKNER.NamedEntityType correctNamedEntityType;
        
        public ReportWronglyDetectedNamedEntityRequestBody() {
        }
        
        public ReportWronglyDetectedNamedEntityRequestBody(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType wrongNamedEntityType, WCFServiceWebRole.ATKNER.NamedEntityType correctNamedEntityType) {
            this.appId = appId;
            this.namedEntity = namedEntity;
            this.context = context;
            this.wrongNamedEntityType = wrongNamedEntityType;
            this.correctNamedEntityType = correctNamedEntityType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWronglyDetectedNamedEntityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWronglyDetectedNamedEntityResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponseBody Body;
        
        public ReportWronglyDetectedNamedEntityResponse() {
        }
        
        public ReportWronglyDetectedNamedEntityResponse(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWronglyDetectedNamedEntityResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATKNER.NERErrorCode ReportWronglyDetectedNamedEntityResult;
        
        public ReportWronglyDetectedNamedEntityResponseBody() {
        }
        
        public ReportWronglyDetectedNamedEntityResponseBody(WCFServiceWebRole.ATKNER.NERErrorCode ReportWronglyDetectedNamedEntityResult) {
            this.ReportWronglyDetectedNamedEntityResult = ReportWronglyDetectedNamedEntityResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IANERServiceChannel : WCFServiceWebRole.ATKNER.IANERService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ANERServiceClient : System.ServiceModel.ClientBase<WCFServiceWebRole.ATKNER.IANERService>, WCFServiceWebRole.ATKNER.IANERService {
        
        public ANERServiceClient() {
        }
        
        public ANERServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ANERServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ANERServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ANERServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse WCFServiceWebRole.ATKNER.IANERService.GetArabicNamedEntities(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest request) {
            return base.Channel.GetArabicNamedEntities(request);
        }
        
        public WCFServiceWebRole.ATKNER.NERErrorCode GetArabicNamedEntities(string appId, string arabicText, WCFServiceWebRole.ATKNER.NEROption options, out WCFServiceWebRole.ATKNER.NamedEntity[] namedEntities) {
            WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest inValue = new WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.arabicText = arabicText;
            inValue.Body.options = options;
            WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse retVal = ((WCFServiceWebRole.ATKNER.IANERService)(this)).GetArabicNamedEntities(inValue);
            namedEntities = retVal.Body.namedEntities;
            return retVal.Body.GetArabicNamedEntitiesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse> WCFServiceWebRole.ATKNER.IANERService.GetArabicNamedEntitiesAsync(WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest request) {
            return base.Channel.GetArabicNamedEntitiesAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesResponse> GetArabicNamedEntitiesAsync(string appId, string arabicText, WCFServiceWebRole.ATKNER.NEROption options) {
            WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest inValue = new WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.GetArabicNamedEntitiesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.arabicText = arabicText;
            inValue.Body.options = options;
            return ((WCFServiceWebRole.ATKNER.IANERService)(this)).GetArabicNamedEntitiesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse WCFServiceWebRole.ATKNER.IANERService.SuggestMissingNamedEntity(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest request) {
            return base.Channel.SuggestMissingNamedEntity(request);
        }
        
        public WCFServiceWebRole.ATKNER.NERErrorCode SuggestMissingNamedEntity(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType namedEntityType) {
            WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest inValue = new WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.namedEntity = namedEntity;
            inValue.Body.context = context;
            inValue.Body.namedEntityType = namedEntityType;
            WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse retVal = ((WCFServiceWebRole.ATKNER.IANERService)(this)).SuggestMissingNamedEntity(inValue);
            return retVal.Body.SuggestMissingNamedEntityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse> WCFServiceWebRole.ATKNER.IANERService.SuggestMissingNamedEntityAsync(WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest request) {
            return base.Channel.SuggestMissingNamedEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityResponse> SuggestMissingNamedEntityAsync(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType namedEntityType) {
            WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest inValue = new WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.SuggestMissingNamedEntityRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.namedEntity = namedEntity;
            inValue.Body.context = context;
            inValue.Body.namedEntityType = namedEntityType;
            return ((WCFServiceWebRole.ATKNER.IANERService)(this)).SuggestMissingNamedEntityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse WCFServiceWebRole.ATKNER.IANERService.ReportWronglyDetectedNamedEntity(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest request) {
            return base.Channel.ReportWronglyDetectedNamedEntity(request);
        }
        
        public WCFServiceWebRole.ATKNER.NERErrorCode ReportWronglyDetectedNamedEntity(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType wrongNamedEntityType, WCFServiceWebRole.ATKNER.NamedEntityType correctNamedEntityType) {
            WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest inValue = new WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.namedEntity = namedEntity;
            inValue.Body.context = context;
            inValue.Body.wrongNamedEntityType = wrongNamedEntityType;
            inValue.Body.correctNamedEntityType = correctNamedEntityType;
            WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse retVal = ((WCFServiceWebRole.ATKNER.IANERService)(this)).ReportWronglyDetectedNamedEntity(inValue);
            return retVal.Body.ReportWronglyDetectedNamedEntityResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse> WCFServiceWebRole.ATKNER.IANERService.ReportWronglyDetectedNamedEntityAsync(WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest request) {
            return base.Channel.ReportWronglyDetectedNamedEntityAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityResponse> ReportWronglyDetectedNamedEntityAsync(string appId, string namedEntity, string context, WCFServiceWebRole.ATKNER.NamedEntityType wrongNamedEntityType, WCFServiceWebRole.ATKNER.NamedEntityType correctNamedEntityType) {
            WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest inValue = new WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequest();
            inValue.Body = new WCFServiceWebRole.ATKNER.ReportWronglyDetectedNamedEntityRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.namedEntity = namedEntity;
            inValue.Body.context = context;
            inValue.Body.wrongNamedEntityType = wrongNamedEntityType;
            inValue.Body.correctNamedEntityType = correctNamedEntityType;
            return ((WCFServiceWebRole.ATKNER.IANERService)(this)).ReportWronglyDetectedNamedEntityAsync(inValue);
        }
    }
}
