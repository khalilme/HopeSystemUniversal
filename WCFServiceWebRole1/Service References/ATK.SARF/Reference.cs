//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServiceWebRole.ATK.SARF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LinguisticMode", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum LinguisticMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Classical = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Colloquial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Conversational = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ColloquialAndConversational = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SarfErrorCode", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum SarfErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNonInitialized = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAccessDenied = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorQuotaExceeded = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorAuthintication = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorMaxLengthExceeded = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInvalidParameter = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorNotImplemented = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorUnknown = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitialization = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationPattern = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationPos = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationPrefix = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationRoot = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationRule = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationStem = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationSuffix = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ErrorInitializationCorpus = 17,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SarfAnalysis", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class SarfAnalysis : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiacTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatternField;
        
        private WCFServiceWebRole.ATK.SARF.PartOfSpeech PosField;
        
        private WCFServiceWebRole.ATK.SARF.Prefix Prefix1Field;
        
        private WCFServiceWebRole.ATK.SARF.Prefix Prefix2Field;
        
        private WCFServiceWebRole.ATK.SARF.Prefix Prefix3Field;
        
        private WCFServiceWebRole.ATK.SARF.Suffix Suffix1Field;
        
        private WCFServiceWebRole.ATK.SARF.Suffix Suffix2Field;
        
        private WCFServiceWebRole.ATK.SARF.Suffix Suffix3Field;
        
        private bool IsDefinitiveALField;
        
        private bool IsNunationField;
        
        private bool IsBorrowedWordField;
        
        private bool IsProperNameField;
        
        private bool IsTitleField;
        
        private bool NunatableField;
        
        private bool AccusativeNunatableField;
        
        private bool GeneativeNunatableField;
        
        private bool NominativeNunatableField;
        
        private bool Prop100Field;
        
        private bool Prop90Field;
        
        private bool Prop80Field;
        
        private bool Prop70Field;
        
        private bool Prop60Field;
        
        private bool Prop50Field;
        
        private bool Prop40Field;
        
        private bool Prop30Field;
        
        private bool Prop20Field;
        
        private bool Prop10Field;
        
        private bool Prop0Field;
        
        private bool CaseEndingIncludedField;
        
        private bool VerbPosField;
        
        private long MorphoSyntacticFeaturesField;
        
        private float ProbabilityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string DiacToken {
            get {
                return this.DiacTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.DiacTokenField, value) != true)) {
                    this.DiacTokenField = value;
                    this.RaisePropertyChanged("DiacToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Stem {
            get {
                return this.StemField;
            }
            set {
                if ((object.ReferenceEquals(this.StemField, value) != true)) {
                    this.StemField = value;
                    this.RaisePropertyChanged("Stem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Root {
            get {
                return this.RootField;
            }
            set {
                if ((object.ReferenceEquals(this.RootField, value) != true)) {
                    this.RootField = value;
                    this.RaisePropertyChanged("Root");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Pattern {
            get {
                return this.PatternField;
            }
            set {
                if ((object.ReferenceEquals(this.PatternField, value) != true)) {
                    this.PatternField = value;
                    this.RaisePropertyChanged("Pattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public WCFServiceWebRole.ATK.SARF.PartOfSpeech Pos {
            get {
                return this.PosField;
            }
            set {
                if ((this.PosField.Equals(value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public WCFServiceWebRole.ATK.SARF.Prefix Prefix1 {
            get {
                return this.Prefix1Field;
            }
            set {
                if ((this.Prefix1Field.Equals(value) != true)) {
                    this.Prefix1Field = value;
                    this.RaisePropertyChanged("Prefix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public WCFServiceWebRole.ATK.SARF.Prefix Prefix2 {
            get {
                return this.Prefix2Field;
            }
            set {
                if ((this.Prefix2Field.Equals(value) != true)) {
                    this.Prefix2Field = value;
                    this.RaisePropertyChanged("Prefix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public WCFServiceWebRole.ATK.SARF.Prefix Prefix3 {
            get {
                return this.Prefix3Field;
            }
            set {
                if ((this.Prefix3Field.Equals(value) != true)) {
                    this.Prefix3Field = value;
                    this.RaisePropertyChanged("Prefix3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public WCFServiceWebRole.ATK.SARF.Suffix Suffix1 {
            get {
                return this.Suffix1Field;
            }
            set {
                if ((this.Suffix1Field.Equals(value) != true)) {
                    this.Suffix1Field = value;
                    this.RaisePropertyChanged("Suffix1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public WCFServiceWebRole.ATK.SARF.Suffix Suffix2 {
            get {
                return this.Suffix2Field;
            }
            set {
                if ((this.Suffix2Field.Equals(value) != true)) {
                    this.Suffix2Field = value;
                    this.RaisePropertyChanged("Suffix2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public WCFServiceWebRole.ATK.SARF.Suffix Suffix3 {
            get {
                return this.Suffix3Field;
            }
            set {
                if ((this.Suffix3Field.Equals(value) != true)) {
                    this.Suffix3Field = value;
                    this.RaisePropertyChanged("Suffix3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool IsDefinitiveAL {
            get {
                return this.IsDefinitiveALField;
            }
            set {
                if ((this.IsDefinitiveALField.Equals(value) != true)) {
                    this.IsDefinitiveALField = value;
                    this.RaisePropertyChanged("IsDefinitiveAL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public bool IsNunation {
            get {
                return this.IsNunationField;
            }
            set {
                if ((this.IsNunationField.Equals(value) != true)) {
                    this.IsNunationField = value;
                    this.RaisePropertyChanged("IsNunation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public bool IsBorrowedWord {
            get {
                return this.IsBorrowedWordField;
            }
            set {
                if ((this.IsBorrowedWordField.Equals(value) != true)) {
                    this.IsBorrowedWordField = value;
                    this.RaisePropertyChanged("IsBorrowedWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool IsProperName {
            get {
                return this.IsProperNameField;
            }
            set {
                if ((this.IsProperNameField.Equals(value) != true)) {
                    this.IsProperNameField = value;
                    this.RaisePropertyChanged("IsProperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public bool IsTitle {
            get {
                return this.IsTitleField;
            }
            set {
                if ((this.IsTitleField.Equals(value) != true)) {
                    this.IsTitleField = value;
                    this.RaisePropertyChanged("IsTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public bool Nunatable {
            get {
                return this.NunatableField;
            }
            set {
                if ((this.NunatableField.Equals(value) != true)) {
                    this.NunatableField = value;
                    this.RaisePropertyChanged("Nunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public bool AccusativeNunatable {
            get {
                return this.AccusativeNunatableField;
            }
            set {
                if ((this.AccusativeNunatableField.Equals(value) != true)) {
                    this.AccusativeNunatableField = value;
                    this.RaisePropertyChanged("AccusativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool GeneativeNunatable {
            get {
                return this.GeneativeNunatableField;
            }
            set {
                if ((this.GeneativeNunatableField.Equals(value) != true)) {
                    this.GeneativeNunatableField = value;
                    this.RaisePropertyChanged("GeneativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public bool NominativeNunatable {
            get {
                return this.NominativeNunatableField;
            }
            set {
                if ((this.NominativeNunatableField.Equals(value) != true)) {
                    this.NominativeNunatableField = value;
                    this.RaisePropertyChanged("NominativeNunatable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public bool Prop100 {
            get {
                return this.Prop100Field;
            }
            set {
                if ((this.Prop100Field.Equals(value) != true)) {
                    this.Prop100Field = value;
                    this.RaisePropertyChanged("Prop100");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool Prop90 {
            get {
                return this.Prop90Field;
            }
            set {
                if ((this.Prop90Field.Equals(value) != true)) {
                    this.Prop90Field = value;
                    this.RaisePropertyChanged("Prop90");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool Prop80 {
            get {
                return this.Prop80Field;
            }
            set {
                if ((this.Prop80Field.Equals(value) != true)) {
                    this.Prop80Field = value;
                    this.RaisePropertyChanged("Prop80");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public bool Prop70 {
            get {
                return this.Prop70Field;
            }
            set {
                if ((this.Prop70Field.Equals(value) != true)) {
                    this.Prop70Field = value;
                    this.RaisePropertyChanged("Prop70");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public bool Prop60 {
            get {
                return this.Prop60Field;
            }
            set {
                if ((this.Prop60Field.Equals(value) != true)) {
                    this.Prop60Field = value;
                    this.RaisePropertyChanged("Prop60");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public bool Prop50 {
            get {
                return this.Prop50Field;
            }
            set {
                if ((this.Prop50Field.Equals(value) != true)) {
                    this.Prop50Field = value;
                    this.RaisePropertyChanged("Prop50");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public bool Prop40 {
            get {
                return this.Prop40Field;
            }
            set {
                if ((this.Prop40Field.Equals(value) != true)) {
                    this.Prop40Field = value;
                    this.RaisePropertyChanged("Prop40");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public bool Prop30 {
            get {
                return this.Prop30Field;
            }
            set {
                if ((this.Prop30Field.Equals(value) != true)) {
                    this.Prop30Field = value;
                    this.RaisePropertyChanged("Prop30");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public bool Prop20 {
            get {
                return this.Prop20Field;
            }
            set {
                if ((this.Prop20Field.Equals(value) != true)) {
                    this.Prop20Field = value;
                    this.RaisePropertyChanged("Prop20");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public bool Prop10 {
            get {
                return this.Prop10Field;
            }
            set {
                if ((this.Prop10Field.Equals(value) != true)) {
                    this.Prop10Field = value;
                    this.RaisePropertyChanged("Prop10");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public bool Prop0 {
            get {
                return this.Prop0Field;
            }
            set {
                if ((this.Prop0Field.Equals(value) != true)) {
                    this.Prop0Field = value;
                    this.RaisePropertyChanged("Prop0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public bool CaseEndingIncluded {
            get {
                return this.CaseEndingIncludedField;
            }
            set {
                if ((this.CaseEndingIncludedField.Equals(value) != true)) {
                    this.CaseEndingIncludedField = value;
                    this.RaisePropertyChanged("CaseEndingIncluded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public bool VerbPos {
            get {
                return this.VerbPosField;
            }
            set {
                if ((this.VerbPosField.Equals(value) != true)) {
                    this.VerbPosField = value;
                    this.RaisePropertyChanged("VerbPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=33)]
        public long MorphoSyntacticFeatures {
            get {
                return this.MorphoSyntacticFeaturesField;
            }
            set {
                if ((this.MorphoSyntacticFeaturesField.Equals(value) != true)) {
                    this.MorphoSyntacticFeaturesField = value;
                    this.RaisePropertyChanged("MorphoSyntacticFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=34)]
        public float Probability {
            get {
                return this.ProbabilityField;
            }
            set {
                if ((this.ProbabilityField.Equals(value) != true)) {
                    this.ProbabilityField = value;
                    this.RaisePropertyChanged("Probability");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartOfSpeech", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum PartOfSpeech : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ALA = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ALA_TAKSEER = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TASGHEER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TASGHEER_TAKSEER = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ZAMAN_MOGARRAD = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ZAMAN_MAZEED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ZAMAN_MOGARRAD_TAKSEER = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ZAMAN_MAZEED_TAKSEER = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_3ADAD = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_3ADAD_TAKSEER = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_3ALAM = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_3ALAM_TAKSEER = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAKAN_MOGARRAD = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAKAN_MAZEED = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAKAN_MOGARRAD_TAKSEER = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAKAN_MAZEED_TAKSEER = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_THAT = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_THAT_TAKSEER = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LAQAB = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LAQAB_TAKSEER = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_FE3L = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_AMR_MOGARRAD = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_AMR_MAZEED = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_GAMED = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MADI_MOGARRAD = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MADI_MAZEED = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MADI_MOGARRAD_MAGHOOL = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MADI_MAZEED_MAGHOOL = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MODARE3_MOGARRAD = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MODARE3_MAZEED = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MODARE3_MOGARRAD_MAGHOOL = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FE3L_MODARE3_MAZEED_MAGHOOL = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AF3AL_TA3AGOB = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TAFDEEL = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TAFDEEL_TAKSEER = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_FA3EL_MOGARRAD = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_FA3EL_MAZEED = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_FA3EL_MOGARRAD_TAKSEER = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_FA3EL_MAZEED_TAKSEER = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAF3OOL_MOGARRAD = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAF3OOL_MAZEED = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAF3OOL_MOGARRAD_TAKSEER = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAF3OOL_MAZEED_TAKSEER = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEFA_MOSHABBAHA = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEFA_MOSHABBAHA_TAKSEER = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEFA_MANSOOBA = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEFA_MANSOOBA_TAKSEER = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEEGHAT_MOBALAGHA = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEEGHAT_MOBALAGHA_TAKSEER = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF_TAKSEER = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF_ZAMAN = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF_ZAMAN_TAKSEER = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF_MAKAN = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ZARF_MAKAN_TAKSEER = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EKHTESAR = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_ESHARA = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAQSOOR = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MAWSOOL = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALASMAA_ALKHAMSA = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAT_ESTETHNA2 = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAT_ESTEFHAM = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAT_TASWEEF = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAT_TANBEEH = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ADAT_7ASR = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TAWKEED = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_TAWKEED_TAKSEER = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_EBTEDA2 = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_ESTEDRAK = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_ESTEFTA7 = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TA7DEED = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TA7QEEQ = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TASWEEF = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TASHBEEH = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TA3REEF = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TA3LEEL = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_TAFSEER = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_GARR = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_GAWAB = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_SHART = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_3ATF = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_MO3ADALA = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_NASEKH = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_NEDA2 = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_NASB = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_NAFY = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HARF_HEGA2 = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAQAM = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RAMZ = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DAMEER_GHA2EB = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DAMEER_MOTAKALLEM = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DAMEER_MOKHATAB = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALAMAT_TASHKEEL = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MADEE7 = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MARRA_MOGARRAD = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MARRA_MOGARRAD_TAKSEER = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_MARRA_MAZEED = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_HAY2A = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESM_HAY2A_TAKSEER = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MOGARRAD = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MAZEED = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MOGARRAD_TAKSEER = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MAZEED_TAKSEER = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_SENA3Y = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_SENA3Y_TAKSEER = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MEEMEY_MOGARRAD = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MEEMEY_MAZEED = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MEEMEY_MOGARRAD_TAKSEER = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MASDAR_MEEMEY_MAZEED_TAKSEER = 108,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prefix", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum Prefix : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_NULL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_ALEF_ESTEFHAM = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_AL_TA3REEF = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_LAM_TA3LEEL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_LAM_TAWKEED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_SEEN_ESTEQBAL = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_LA_NAFY = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_LAM_AMR = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_WAW_3ATF = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_FA2_3ATF = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_BA2_GARR = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_KAF_GARR = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_LAM_GARR = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_ALEF_ANAIT_MA3LOOM = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_TA2_ANAIT_MA3LOOM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_NUN_ANAIT_MA3LOOM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_YA2_ANAIT_MA3LOOM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_ALEF_ANAIT_MA3LOOM_MAGHOOL = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_TA2_ANAIT_MA3LOOM_MAGHOOL = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_NUN_ANAIT_MA3LOOM_MAGHOOL = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFIX_YA2_ANAIT_MA3LOOM_MAGHOOL = 20,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Suffix", Namespace="http://nlptoolkit.cloudapp.net")]
    public enum Suffix : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NULL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_ALEF_TANWEEN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA2_MARBOOTA_TA2NEETH = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_ALEF_MADD_TATHNEYA = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_AAN_TATHNEYA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_AY_TATHNEYA = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_AYN_TATHNEYA = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA_TATHNEYA_MO2ANATH = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TAN_TATHNEYA_MO2ANATH = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TAY_TATHNEYA_MO2ANATH = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TAYN_TATHNEYA_MO2ANATH = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NUN_TAWKEED_KHAFEEFA = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NUN_TAWKEED_THAQEELA = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_AAT_GAM3_MO2ANATH_SALEM = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_WAW_GAM3_MOTHAKAR_SALEM = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_OON_GAM3_MOTHAKAR_SALEM = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_YA2_GAM3_MOTHAKAR_SALEM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_EEN_GAM3_MOTHAKAR_SALEM = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA2_FA3EL_TA2NEETH = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_ALEF_MADD_FA3EL_MOTHANA = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_AAN_FA3EL_MOTHANA = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA_FA3EL_MOTHANA_MO2ANATH = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_WAW_ALEF_GAMA3A_FA3EL = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_OON_FA3EL_GAM3 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NUN_NESWA_FA3EL = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA2_FA3EL_MOKHATAB = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TI_FA3ELA_MOKHATABA = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_EEN_MOKHATABA_FA3EL = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_YA2_MOKHATABA_FA3EL = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TUMA_FA3EL_MOTHANA_MOKHATAB = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TUM_FA3EL_GAM3_MOTHAKAR = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TUN_FA3EL_GAM3_MO2ANATH = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_TA2_FA3EL_MOTAKALLEM = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NA_FA3EL_MOTAKALEMEEN = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KAF_MODAF_MOKHATAB = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KI_MODAF_MOKHATABA_MOFRAD = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUMA_MODAF_MOKHATAB_MOTHANA = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUM_MODAF_MOKHATAB_GAM3 = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUNNA_MODAF_MOKHATAB_GAM3_MO2ANATH = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_YA2_MODAF_MELKEYA = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NA_MODAF_MOTAKALEMEEN = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HA2_MODAF_GHA2EB_MOTHAKKAR = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HA_MODAF_GHA2EB_MO2ANATH = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUMA_MODAF_GHA2EB_MOTHANNA = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUM_MODAF_GHA2EB_GAM3_MOTHAKAR = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUNNA_MODAF_GHA2EB_GAM3_MO2ANATH = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KA_MOKHATAB_MOFRAD = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KI_MOKHATAB_MOFRAD_MO2ANATH = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUMA_MOKHATAB_MOTHANA_MOTHAKAR = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUM_MOKHATAB_GAM3_MOTHAKAR = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_KUNNA_MOKHATAB_GAM3_MO2ANATH = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NI_WEQAYA_MOTAKALLEM = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_NA_MOTAKALEMEEN = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HU_GHA2EB_MOTHAKAR = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HA_GHA2EB_MO2ANATH = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUMA_GHA2EB_MOTHANA = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUM_GHA2EB_GAM3_MOTHAKAR = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUN_GHA2EB_GAM3_MO2ANATH = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HU_GHA2EB_MOTHAKAR_MAF3OOL_THANI = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HA_GHA2EB_MO2ANATH_MAF3OOL_THANI = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUMA_GHA2EB_MOTHANA_MAF3OOL_THANI = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUM_GHA2EB_GAM3_MAF3OOL_THANI = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUFFIX_HUN_GHA2EB_GAM3_MO2ANATH_MAF3OOL_THANI = 62,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://nlptoolkit.cloudapp.net", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MorphoSyntacticFeatures", Namespace="http://nlptoolkit.cloudapp.net")]
    [System.SerializableAttribute()]
    public partial class MorphoSyntacticFeatures : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool GenderMasculineField;
        
        private bool GenderFeminineField;
        
        private bool NumberSingularField;
        
        private bool NumberDualField;
        
        private bool NumberPluralProperField;
        
        private bool NumberPluralBrokenField;
        
        private bool NumberPluralField;
        
        private bool CeNounNominativeField;
        
        private bool CeNounAccusativeField;
        
        private bool CeNounGenetiveField;
        
        private bool CeIndeclinableField;
        
        private bool CeVerbIndicativeField;
        
        private bool CeVerbSubjunctiveField;
        
        private bool CeVerbJussiveField;
        
        private bool RationalField;
        
        private bool IrrationalField;
        
        private bool IntransitiveField;
        
        private bool TransitiveField;
        
        private bool DitransitiveField;
        
        private bool PersonFirstField;
        
        private bool PersonSecondField;
        
        private bool PersonThirdField;
        
        private bool PronounDroppedField;
        
        private bool HumanSubjectMustField;
        
        private bool HumanSubjectMayField;
        
        private bool HumanObject1MustField;
        
        private bool HumanObject1MayField;
        
        private bool HumanObject2MustField;
        
        private bool HumanObject2MayField;
        
        private bool VerbPresentField;
        
        private bool VerbPastField;
        
        private bool VerbFutureField;
        
        private bool VerbImperativeField;
        
        private bool GendPlusField;
        
        private bool GendMinusField;
        
        private bool PredefinedField;
        
        private bool VerbClass1Field;
        
        private bool VerbClass2Field;
        
        private bool VerbClass3Field;
        
        private bool VerbClass4Field;
        
        private bool VerbClass5Field;
        
        private bool VerbClass6Field;
        
        private bool NunatedField;
        
        private bool DefinedTheField;
        
        private bool DefinedGendyField;
        
        private bool NotDefinedField;
        
        private bool QuranicUsageField;
        
        private bool ProperNameField;
        
        private bool NotUsedField;
        
        private bool NameUsedAdjectiveField;
        
        private bool NameMayField;
        
        private bool NameUsedMoreField;
        
        private bool AdjectiveUsedMoreField;
        
        private bool InfinitiveUsedAdjectiveField;
        
        private bool LocationTitleField;
        
        private bool HumanTitleField;
        
        private bool OrganizationTitleField;
        
        private bool PositiveField;
        
        private bool NegativeField;
        
        private bool SemiPositiveField;
        
        private bool SemiNegativeField;
        
        private bool TransitiveWithPrepField;
        
        private bool DitransitiveWithPrepField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool GenderMasculine {
            get {
                return this.GenderMasculineField;
            }
            set {
                if ((this.GenderMasculineField.Equals(value) != true)) {
                    this.GenderMasculineField = value;
                    this.RaisePropertyChanged("GenderMasculine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public bool GenderFeminine {
            get {
                return this.GenderFeminineField;
            }
            set {
                if ((this.GenderFeminineField.Equals(value) != true)) {
                    this.GenderFeminineField = value;
                    this.RaisePropertyChanged("GenderFeminine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public bool NumberSingular {
            get {
                return this.NumberSingularField;
            }
            set {
                if ((this.NumberSingularField.Equals(value) != true)) {
                    this.NumberSingularField = value;
                    this.RaisePropertyChanged("NumberSingular");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public bool NumberDual {
            get {
                return this.NumberDualField;
            }
            set {
                if ((this.NumberDualField.Equals(value) != true)) {
                    this.NumberDualField = value;
                    this.RaisePropertyChanged("NumberDual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public bool NumberPluralProper {
            get {
                return this.NumberPluralProperField;
            }
            set {
                if ((this.NumberPluralProperField.Equals(value) != true)) {
                    this.NumberPluralProperField = value;
                    this.RaisePropertyChanged("NumberPluralProper");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public bool NumberPluralBroken {
            get {
                return this.NumberPluralBrokenField;
            }
            set {
                if ((this.NumberPluralBrokenField.Equals(value) != true)) {
                    this.NumberPluralBrokenField = value;
                    this.RaisePropertyChanged("NumberPluralBroken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public bool NumberPlural {
            get {
                return this.NumberPluralField;
            }
            set {
                if ((this.NumberPluralField.Equals(value) != true)) {
                    this.NumberPluralField = value;
                    this.RaisePropertyChanged("NumberPlural");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=7)]
        public bool CeNounNominative {
            get {
                return this.CeNounNominativeField;
            }
            set {
                if ((this.CeNounNominativeField.Equals(value) != true)) {
                    this.CeNounNominativeField = value;
                    this.RaisePropertyChanged("CeNounNominative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=8)]
        public bool CeNounAccusative {
            get {
                return this.CeNounAccusativeField;
            }
            set {
                if ((this.CeNounAccusativeField.Equals(value) != true)) {
                    this.CeNounAccusativeField = value;
                    this.RaisePropertyChanged("CeNounAccusative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=9)]
        public bool CeNounGenetive {
            get {
                return this.CeNounGenetiveField;
            }
            set {
                if ((this.CeNounGenetiveField.Equals(value) != true)) {
                    this.CeNounGenetiveField = value;
                    this.RaisePropertyChanged("CeNounGenetive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=10)]
        public bool CeIndeclinable {
            get {
                return this.CeIndeclinableField;
            }
            set {
                if ((this.CeIndeclinableField.Equals(value) != true)) {
                    this.CeIndeclinableField = value;
                    this.RaisePropertyChanged("CeIndeclinable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=11)]
        public bool CeVerbIndicative {
            get {
                return this.CeVerbIndicativeField;
            }
            set {
                if ((this.CeVerbIndicativeField.Equals(value) != true)) {
                    this.CeVerbIndicativeField = value;
                    this.RaisePropertyChanged("CeVerbIndicative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=12)]
        public bool CeVerbSubjunctive {
            get {
                return this.CeVerbSubjunctiveField;
            }
            set {
                if ((this.CeVerbSubjunctiveField.Equals(value) != true)) {
                    this.CeVerbSubjunctiveField = value;
                    this.RaisePropertyChanged("CeVerbSubjunctive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=13)]
        public bool CeVerbJussive {
            get {
                return this.CeVerbJussiveField;
            }
            set {
                if ((this.CeVerbJussiveField.Equals(value) != true)) {
                    this.CeVerbJussiveField = value;
                    this.RaisePropertyChanged("CeVerbJussive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=14)]
        public bool Rational {
            get {
                return this.RationalField;
            }
            set {
                if ((this.RationalField.Equals(value) != true)) {
                    this.RationalField = value;
                    this.RaisePropertyChanged("Rational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=15)]
        public bool Irrational {
            get {
                return this.IrrationalField;
            }
            set {
                if ((this.IrrationalField.Equals(value) != true)) {
                    this.IrrationalField = value;
                    this.RaisePropertyChanged("Irrational");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=16)]
        public bool Intransitive {
            get {
                return this.IntransitiveField;
            }
            set {
                if ((this.IntransitiveField.Equals(value) != true)) {
                    this.IntransitiveField = value;
                    this.RaisePropertyChanged("Intransitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=17)]
        public bool Transitive {
            get {
                return this.TransitiveField;
            }
            set {
                if ((this.TransitiveField.Equals(value) != true)) {
                    this.TransitiveField = value;
                    this.RaisePropertyChanged("Transitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=18)]
        public bool Ditransitive {
            get {
                return this.DitransitiveField;
            }
            set {
                if ((this.DitransitiveField.Equals(value) != true)) {
                    this.DitransitiveField = value;
                    this.RaisePropertyChanged("Ditransitive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=19)]
        public bool PersonFirst {
            get {
                return this.PersonFirstField;
            }
            set {
                if ((this.PersonFirstField.Equals(value) != true)) {
                    this.PersonFirstField = value;
                    this.RaisePropertyChanged("PersonFirst");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=20)]
        public bool PersonSecond {
            get {
                return this.PersonSecondField;
            }
            set {
                if ((this.PersonSecondField.Equals(value) != true)) {
                    this.PersonSecondField = value;
                    this.RaisePropertyChanged("PersonSecond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=21)]
        public bool PersonThird {
            get {
                return this.PersonThirdField;
            }
            set {
                if ((this.PersonThirdField.Equals(value) != true)) {
                    this.PersonThirdField = value;
                    this.RaisePropertyChanged("PersonThird");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=22)]
        public bool PronounDropped {
            get {
                return this.PronounDroppedField;
            }
            set {
                if ((this.PronounDroppedField.Equals(value) != true)) {
                    this.PronounDroppedField = value;
                    this.RaisePropertyChanged("PronounDropped");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=23)]
        public bool HumanSubjectMust {
            get {
                return this.HumanSubjectMustField;
            }
            set {
                if ((this.HumanSubjectMustField.Equals(value) != true)) {
                    this.HumanSubjectMustField = value;
                    this.RaisePropertyChanged("HumanSubjectMust");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=24)]
        public bool HumanSubjectMay {
            get {
                return this.HumanSubjectMayField;
            }
            set {
                if ((this.HumanSubjectMayField.Equals(value) != true)) {
                    this.HumanSubjectMayField = value;
                    this.RaisePropertyChanged("HumanSubjectMay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=25)]
        public bool HumanObject1Must {
            get {
                return this.HumanObject1MustField;
            }
            set {
                if ((this.HumanObject1MustField.Equals(value) != true)) {
                    this.HumanObject1MustField = value;
                    this.RaisePropertyChanged("HumanObject1Must");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=26)]
        public bool HumanObject1May {
            get {
                return this.HumanObject1MayField;
            }
            set {
                if ((this.HumanObject1MayField.Equals(value) != true)) {
                    this.HumanObject1MayField = value;
                    this.RaisePropertyChanged("HumanObject1May");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=27)]
        public bool HumanObject2Must {
            get {
                return this.HumanObject2MustField;
            }
            set {
                if ((this.HumanObject2MustField.Equals(value) != true)) {
                    this.HumanObject2MustField = value;
                    this.RaisePropertyChanged("HumanObject2Must");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=28)]
        public bool HumanObject2May {
            get {
                return this.HumanObject2MayField;
            }
            set {
                if ((this.HumanObject2MayField.Equals(value) != true)) {
                    this.HumanObject2MayField = value;
                    this.RaisePropertyChanged("HumanObject2May");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=29)]
        public bool VerbPresent {
            get {
                return this.VerbPresentField;
            }
            set {
                if ((this.VerbPresentField.Equals(value) != true)) {
                    this.VerbPresentField = value;
                    this.RaisePropertyChanged("VerbPresent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=30)]
        public bool VerbPast {
            get {
                return this.VerbPastField;
            }
            set {
                if ((this.VerbPastField.Equals(value) != true)) {
                    this.VerbPastField = value;
                    this.RaisePropertyChanged("VerbPast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=31)]
        public bool VerbFuture {
            get {
                return this.VerbFutureField;
            }
            set {
                if ((this.VerbFutureField.Equals(value) != true)) {
                    this.VerbFutureField = value;
                    this.RaisePropertyChanged("VerbFuture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=32)]
        public bool VerbImperative {
            get {
                return this.VerbImperativeField;
            }
            set {
                if ((this.VerbImperativeField.Equals(value) != true)) {
                    this.VerbImperativeField = value;
                    this.RaisePropertyChanged("VerbImperative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=33)]
        public bool GendPlus {
            get {
                return this.GendPlusField;
            }
            set {
                if ((this.GendPlusField.Equals(value) != true)) {
                    this.GendPlusField = value;
                    this.RaisePropertyChanged("GendPlus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=34)]
        public bool GendMinus {
            get {
                return this.GendMinusField;
            }
            set {
                if ((this.GendMinusField.Equals(value) != true)) {
                    this.GendMinusField = value;
                    this.RaisePropertyChanged("GendMinus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=35)]
        public bool Predefined {
            get {
                return this.PredefinedField;
            }
            set {
                if ((this.PredefinedField.Equals(value) != true)) {
                    this.PredefinedField = value;
                    this.RaisePropertyChanged("Predefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=36)]
        public bool VerbClass1 {
            get {
                return this.VerbClass1Field;
            }
            set {
                if ((this.VerbClass1Field.Equals(value) != true)) {
                    this.VerbClass1Field = value;
                    this.RaisePropertyChanged("VerbClass1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=37)]
        public bool VerbClass2 {
            get {
                return this.VerbClass2Field;
            }
            set {
                if ((this.VerbClass2Field.Equals(value) != true)) {
                    this.VerbClass2Field = value;
                    this.RaisePropertyChanged("VerbClass2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=38)]
        public bool VerbClass3 {
            get {
                return this.VerbClass3Field;
            }
            set {
                if ((this.VerbClass3Field.Equals(value) != true)) {
                    this.VerbClass3Field = value;
                    this.RaisePropertyChanged("VerbClass3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=39)]
        public bool VerbClass4 {
            get {
                return this.VerbClass4Field;
            }
            set {
                if ((this.VerbClass4Field.Equals(value) != true)) {
                    this.VerbClass4Field = value;
                    this.RaisePropertyChanged("VerbClass4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=40)]
        public bool VerbClass5 {
            get {
                return this.VerbClass5Field;
            }
            set {
                if ((this.VerbClass5Field.Equals(value) != true)) {
                    this.VerbClass5Field = value;
                    this.RaisePropertyChanged("VerbClass5");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=41)]
        public bool VerbClass6 {
            get {
                return this.VerbClass6Field;
            }
            set {
                if ((this.VerbClass6Field.Equals(value) != true)) {
                    this.VerbClass6Field = value;
                    this.RaisePropertyChanged("VerbClass6");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=42)]
        public bool Nunated {
            get {
                return this.NunatedField;
            }
            set {
                if ((this.NunatedField.Equals(value) != true)) {
                    this.NunatedField = value;
                    this.RaisePropertyChanged("Nunated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=43)]
        public bool DefinedThe {
            get {
                return this.DefinedTheField;
            }
            set {
                if ((this.DefinedTheField.Equals(value) != true)) {
                    this.DefinedTheField = value;
                    this.RaisePropertyChanged("DefinedThe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=44)]
        public bool DefinedGendy {
            get {
                return this.DefinedGendyField;
            }
            set {
                if ((this.DefinedGendyField.Equals(value) != true)) {
                    this.DefinedGendyField = value;
                    this.RaisePropertyChanged("DefinedGendy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=45)]
        public bool NotDefined {
            get {
                return this.NotDefinedField;
            }
            set {
                if ((this.NotDefinedField.Equals(value) != true)) {
                    this.NotDefinedField = value;
                    this.RaisePropertyChanged("NotDefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=46)]
        public bool QuranicUsage {
            get {
                return this.QuranicUsageField;
            }
            set {
                if ((this.QuranicUsageField.Equals(value) != true)) {
                    this.QuranicUsageField = value;
                    this.RaisePropertyChanged("QuranicUsage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=47)]
        public bool ProperName {
            get {
                return this.ProperNameField;
            }
            set {
                if ((this.ProperNameField.Equals(value) != true)) {
                    this.ProperNameField = value;
                    this.RaisePropertyChanged("ProperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=48)]
        public bool NotUsed {
            get {
                return this.NotUsedField;
            }
            set {
                if ((this.NotUsedField.Equals(value) != true)) {
                    this.NotUsedField = value;
                    this.RaisePropertyChanged("NotUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=49)]
        public bool NameUsedAdjective {
            get {
                return this.NameUsedAdjectiveField;
            }
            set {
                if ((this.NameUsedAdjectiveField.Equals(value) != true)) {
                    this.NameUsedAdjectiveField = value;
                    this.RaisePropertyChanged("NameUsedAdjective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=50)]
        public bool NameMay {
            get {
                return this.NameMayField;
            }
            set {
                if ((this.NameMayField.Equals(value) != true)) {
                    this.NameMayField = value;
                    this.RaisePropertyChanged("NameMay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=51)]
        public bool NameUsedMore {
            get {
                return this.NameUsedMoreField;
            }
            set {
                if ((this.NameUsedMoreField.Equals(value) != true)) {
                    this.NameUsedMoreField = value;
                    this.RaisePropertyChanged("NameUsedMore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=52)]
        public bool AdjectiveUsedMore {
            get {
                return this.AdjectiveUsedMoreField;
            }
            set {
                if ((this.AdjectiveUsedMoreField.Equals(value) != true)) {
                    this.AdjectiveUsedMoreField = value;
                    this.RaisePropertyChanged("AdjectiveUsedMore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=53)]
        public bool InfinitiveUsedAdjective {
            get {
                return this.InfinitiveUsedAdjectiveField;
            }
            set {
                if ((this.InfinitiveUsedAdjectiveField.Equals(value) != true)) {
                    this.InfinitiveUsedAdjectiveField = value;
                    this.RaisePropertyChanged("InfinitiveUsedAdjective");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=54)]
        public bool LocationTitle {
            get {
                return this.LocationTitleField;
            }
            set {
                if ((this.LocationTitleField.Equals(value) != true)) {
                    this.LocationTitleField = value;
                    this.RaisePropertyChanged("LocationTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=55)]
        public bool HumanTitle {
            get {
                return this.HumanTitleField;
            }
            set {
                if ((this.HumanTitleField.Equals(value) != true)) {
                    this.HumanTitleField = value;
                    this.RaisePropertyChanged("HumanTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=56)]
        public bool OrganizationTitle {
            get {
                return this.OrganizationTitleField;
            }
            set {
                if ((this.OrganizationTitleField.Equals(value) != true)) {
                    this.OrganizationTitleField = value;
                    this.RaisePropertyChanged("OrganizationTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=57)]
        public bool Positive {
            get {
                return this.PositiveField;
            }
            set {
                if ((this.PositiveField.Equals(value) != true)) {
                    this.PositiveField = value;
                    this.RaisePropertyChanged("Positive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=58)]
        public bool Negative {
            get {
                return this.NegativeField;
            }
            set {
                if ((this.NegativeField.Equals(value) != true)) {
                    this.NegativeField = value;
                    this.RaisePropertyChanged("Negative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=59)]
        public bool SemiPositive {
            get {
                return this.SemiPositiveField;
            }
            set {
                if ((this.SemiPositiveField.Equals(value) != true)) {
                    this.SemiPositiveField = value;
                    this.RaisePropertyChanged("SemiPositive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=60)]
        public bool SemiNegative {
            get {
                return this.SemiNegativeField;
            }
            set {
                if ((this.SemiNegativeField.Equals(value) != true)) {
                    this.SemiNegativeField = value;
                    this.RaisePropertyChanged("SemiNegative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=61)]
        public bool TransitiveWithPrep {
            get {
                return this.TransitiveWithPrepField;
            }
            set {
                if ((this.TransitiveWithPrepField.Equals(value) != true)) {
                    this.TransitiveWithPrepField = value;
                    this.RaisePropertyChanged("TransitiveWithPrep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=62)]
        public bool DitransitiveWithPrep {
            get {
                return this.DitransitiveWithPrepField;
            }
            set {
                if ((this.DitransitiveWithPrepField.Equals(value) != true)) {
                    this.DitransitiveWithPrepField = value;
                    this.RaisePropertyChanged("DitransitiveWithPrep");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://nlptoolkit.cloudapp.net", ConfigurationName="ATK.SARF.ISarfService")]
    public interface ISarfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeToken", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokenResponse")]
        WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse AnalyzeToken(WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeToken", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokenResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse> AnalyzeTokenAsync(WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokensArray", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokensArrayResponse")]
        WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse AnalyzeTokensArray(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokensArray", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/AnalyzeTokensArrayResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse> AnalyzeTokensArrayAsync(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWord", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordResponse")]
        WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse SynthesizeWord(WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWord", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse> SynthesizeWordAsync(WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordsArray", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordsArrayResponse")]
        WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse SynthesizeWordsArray(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordsArray", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SynthesizeWordsArrayResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse> SynthesizeWordsArrayAsync(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetPlural", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetPluralResponse")]
        WCFServiceWebRole.ATK.SARF.GetPluralResponse GetPlural(WCFServiceWebRole.ATK.SARF.GetPluralRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetPlural", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetPluralResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetPluralResponse> GetPluralAsync(WCFServiceWebRole.ATK.SARF.GetPluralRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetSingularResponse")]
        WCFServiceWebRole.ATK.SARF.GetSingularResponse GetSingular(WCFServiceWebRole.ATK.SARF.GetSingularRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetSingularResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetSingularResponse> GetSingularAsync(WCFServiceWebRole.ATK.SARF.GetSingularRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetInflections", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsResponse")]
        WCFServiceWebRole.ATK.SARF.GetInflectionsResponse GetInflections(WCFServiceWebRole.ATK.SARF.GetInflectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetInflections", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsResponse> GetInflectionsAsync(WCFServiceWebRole.ATK.SARF.GetInflectionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsEx", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsExResponse")]
        WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse GetInflectionsEx(WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsEx", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetInflectionsExResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse> GetInflectionsExAsync(WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetDerivatives", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetDerivativesResponse")]
        WCFServiceWebRole.ATK.SARF.GetDerivativesResponse GetDerivatives(WCFServiceWebRole.ATK.SARF.GetDerivativesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetDerivatives", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetDerivativesResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetDerivativesResponse> GetDerivativesAsync(WCFServiceWebRole.ATK.SARF.GetDerivativesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetAllDerivatives", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetAllDerivativesResponse")]
        WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse GetAllDerivatives(WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/GetAllDerivatives", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/GetAllDerivativesResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse> GetAllDerivativesAsync(WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/DecodeFeatures", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/DecodeFeaturesResponse")]
        WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse DecodeFeatures(WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/DecodeFeatures", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/DecodeFeaturesResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse> DecodeFeaturesAsync(WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/EncodeFeatures", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/EncodeFeaturesResponse")]
        WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse EncodeFeatures(WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/EncodeFeatures", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/EncodeFeaturesResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse> EncodeFeaturesAsync(WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingAnalysis", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingAnalysisResponse")]
        WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse SuggestMissingAnalysis(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingAnalysis", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingAnalysisResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse> SuggestMissingAnalysisAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongAnalysis", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongAnalysisResponse")]
        WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse ReportWrongAnalysis(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongAnalysis", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongAnalysisResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse> ReportWrongAnalysisAsync(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysisSelection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysisSelectionResponse")]
        WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse ReportAnalysisSelection(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysisSelection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysisSelectionResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse> ReportAnalysisSelectionAsync(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysesSelection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysesSelectionResponse")]
        WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse ReportAnalysesSelection(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysesSelection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportAnalysesSelectionResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse> ReportAnalysesSelectionAsync(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongSynthesizedWord", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongSynthesizedWordResponse")]
        WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse ReportWrongSynthesizedWord(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongSynthesizedWord", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongSynthesizedWordResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse> ReportWrongSynthesizedWordAsync(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingDerivative", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingDerivativeResponse")]
        WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse SuggestMissingDerivative(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingDerivative", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingDerivativeResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse> SuggestMissingDerivativeAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongDerivative", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongDerivativeResponse")]
        WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse ReportWrongDerivative(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongDerivative", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongDerivativeResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse> ReportWrongDerivativeAsync(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingInflection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingInflectionResponse")]
        WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse SuggestMissingInflection(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingInflection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingInflectionResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse> SuggestMissingInflectionAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongInflection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongInflectionResponse")]
        WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse ReportWrongInflection(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongInflection", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongInflectionResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse> ReportWrongInflectionAsync(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingPluralSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingPluralSingularResponse")]
        WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse SuggestMissingPluralSingular(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingPluralSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/SuggestMissingPluralSingularResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse> SuggestMissingPluralSingularAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest request);
        
        // CODEGEN: Generating message contract since element name appId from namespace http://nlptoolkit.cloudapp.net is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongPluralSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongPluralSingularResponse")]
        WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse ReportWrongPluralSingular(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongPluralSingular", ReplyAction="http://nlptoolkit.cloudapp.net/ISarfService/ReportWrongPluralSingularResponse")]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse> ReportWrongPluralSingularAsync(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AnalyzeTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AnalyzeToken", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequestBody Body;
        
        public AnalyzeTokenRequest() {
        }
        
        public AnalyzeTokenRequest(WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class AnalyzeTokenRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string word;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        public AnalyzeTokenRequestBody() {
        }
        
        public AnalyzeTokenRequestBody(string appId, string word, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            this.appId = appId;
            this.word = word;
            this.lingMode = lingMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AnalyzeTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AnalyzeTokenResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponseBody Body;
        
        public AnalyzeTokenResponse() {
        }
        
        public AnalyzeTokenResponse(WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class AnalyzeTokenResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode AnalyzeTokenResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public AnalyzeTokenResponseBody() {
        }
        
        public AnalyzeTokenResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode AnalyzeTokenResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.AnalyzeTokenResult = AnalyzeTokenResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AnalyzeTokensArrayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AnalyzeTokensArray", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequestBody Body;
        
        public AnalyzeTokensArrayRequest() {
        }
        
        public AnalyzeTokensArrayRequest(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class AnalyzeTokensArrayRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.ArrayOfString words;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        public AnalyzeTokensArrayRequestBody() {
        }
        
        public AnalyzeTokensArrayRequestBody(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            this.appId = appId;
            this.words = words;
            this.lingMode = lingMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AnalyzeTokensArrayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="AnalyzeTokensArrayResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponseBody Body;
        
        public AnalyzeTokensArrayResponse() {
        }
        
        public AnalyzeTokensArrayResponse(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class AnalyzeTokensArrayResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode[] AnalyzeTokensArrayResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] analyses;
        
        public AnalyzeTokensArrayResponseBody() {
        }
        
        public AnalyzeTokensArrayResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode[] AnalyzeTokensArrayResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] analyses) {
            this.AnalyzeTokensArrayResult = AnalyzeTokensArrayResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SynthesizeWordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SynthesizeWord", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SynthesizeWordRequestBody Body;
        
        public SynthesizeWordRequest() {
        }
        
        public SynthesizeWordRequest(WCFServiceWebRole.ATK.SARF.SynthesizeWordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SynthesizeWordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis inAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        public SynthesizeWordRequestBody() {
        }
        
        public SynthesizeWordRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis inAnalysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            this.appId = appId;
            this.inAnalysis = inAnalysis;
            this.lingMode = lingMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SynthesizeWordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SynthesizeWordResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SynthesizeWordResponseBody Body;
        
        public SynthesizeWordResponse() {
        }
        
        public SynthesizeWordResponse(WCFServiceWebRole.ATK.SARF.SynthesizeWordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SynthesizeWordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SynthesizeWordResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] outAnalyses;
        
        public SynthesizeWordResponseBody() {
        }
        
        public SynthesizeWordResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode SynthesizeWordResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] outAnalyses) {
            this.SynthesizeWordResult = SynthesizeWordResult;
            this.outAnalyses = outAnalyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SynthesizeWordsArrayRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SynthesizeWordsArray", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequestBody Body;
        
        public SynthesizeWordsArrayRequest() {
        }
        
        public SynthesizeWordsArrayRequest(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SynthesizeWordsArrayRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] inAnalyses;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        public SynthesizeWordsArrayRequestBody() {
        }
        
        public SynthesizeWordsArrayRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] inAnalyses, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            this.appId = appId;
            this.inAnalyses = inAnalyses;
            this.lingMode = lingMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SynthesizeWordsArrayResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SynthesizeWordsArrayResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponseBody Body;
        
        public SynthesizeWordsArrayResponse() {
        }
        
        public SynthesizeWordsArrayResponse(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SynthesizeWordsArrayResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode[] SynthesizeWordsArrayResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] outAnalyses;
        
        public SynthesizeWordsArrayResponseBody() {
        }
        
        public SynthesizeWordsArrayResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode[] SynthesizeWordsArrayResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] outAnalyses) {
            this.SynthesizeWordsArrayResult = SynthesizeWordsArrayResult;
            this.outAnalyses = outAnalyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPluralRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPlural", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetPluralRequestBody Body;
        
        public GetPluralRequest() {
        }
        
        public GetPluralRequest(WCFServiceWebRole.ATK.SARF.GetPluralRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetPluralRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool ignoreAffixation;
        
        public GetPluralRequestBody() {
        }
        
        public GetPluralRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            this.appId = appId;
            this.analysis = analysis;
            this.ignoreAffixation = ignoreAffixation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPluralResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetPluralResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetPluralResponseBody Body;
        
        public GetPluralResponse() {
        }
        
        public GetPluralResponse(WCFServiceWebRole.ATK.SARF.GetPluralResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetPluralResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetPluralResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public GetPluralResponseBody() {
        }
        
        public GetPluralResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetPluralResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.GetPluralResult = GetPluralResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingularRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSingular", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetSingularRequestBody Body;
        
        public GetSingularRequest() {
        }
        
        public GetSingularRequest(WCFServiceWebRole.ATK.SARF.GetSingularRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetSingularRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool ignoreAffixation;
        
        public GetSingularRequestBody() {
        }
        
        public GetSingularRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            this.appId = appId;
            this.analysis = analysis;
            this.ignoreAffixation = ignoreAffixation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSingularResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetSingularResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetSingularResponseBody Body;
        
        public GetSingularResponse() {
        }
        
        public GetSingularResponse(WCFServiceWebRole.ATK.SARF.GetSingularResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetSingularResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetSingularResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public GetSingularResponseBody() {
        }
        
        public GetSingularResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetSingularResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.GetSingularResult = GetSingularResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInflectionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInflections", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetInflectionsRequestBody Body;
        
        public GetInflectionsRequest() {
        }
        
        public GetInflectionsRequest(WCFServiceWebRole.ATK.SARF.GetInflectionsRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetInflectionsRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool diacritized;
        
        public GetInflectionsRequestBody() {
        }
        
        public GetInflectionsRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized) {
            this.appId = appId;
            this.analysis = analysis;
            this.lingMode = lingMode;
            this.diacritized = diacritized;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInflectionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInflectionsResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetInflectionsResponseBody Body;
        
        public GetInflectionsResponse() {
        }
        
        public GetInflectionsResponse(WCFServiceWebRole.ATK.SARF.GetInflectionsResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetInflectionsResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflectionsResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.ArrayOfString inflections;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int totalInflections;
        
        public GetInflectionsResponseBody() {
        }
        
        public GetInflectionsResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflectionsResult, WCFServiceWebRole.ATK.SARF.ArrayOfString inflections, int totalInflections) {
            this.GetInflectionsResult = GetInflectionsResult;
            this.inflections = inflections;
            this.totalInflections = totalInflections;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInflectionsExRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInflectionsEx", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetInflectionsExRequestBody Body;
        
        public GetInflectionsExRequest() {
        }
        
        public GetInflectionsExRequest(WCFServiceWebRole.ATK.SARF.GetInflectionsExRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetInflectionsExRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool diacritized;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int maxInflections;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int startIndex;
        
        public GetInflectionsExRequestBody() {
        }
        
        public GetInflectionsExRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized, int maxInflections, int startIndex) {
            this.appId = appId;
            this.analysis = analysis;
            this.lingMode = lingMode;
            this.diacritized = diacritized;
            this.maxInflections = maxInflections;
            this.startIndex = startIndex;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetInflectionsExResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetInflectionsExResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetInflectionsExResponseBody Body;
        
        public GetInflectionsExResponse() {
        }
        
        public GetInflectionsExResponse(WCFServiceWebRole.ATK.SARF.GetInflectionsExResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetInflectionsExResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflectionsExResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.ArrayOfString inflections;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int totalInflections;
        
        public GetInflectionsExResponseBody() {
        }
        
        public GetInflectionsExResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflectionsExResult, WCFServiceWebRole.ATK.SARF.ArrayOfString inflections, int totalInflections) {
            this.GetInflectionsExResult = GetInflectionsExResult;
            this.inflections = inflections;
            this.totalInflections = totalInflections;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDerivativesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDerivatives", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetDerivativesRequestBody Body;
        
        public GetDerivativesRequest() {
        }
        
        public GetDerivativesRequest(WCFServiceWebRole.ATK.SARF.GetDerivativesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetDerivativesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public WCFServiceWebRole.ATK.SARF.PartOfSpeech pos;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool ignoreAffixation;
        
        public GetDerivativesRequestBody() {
        }
        
        public GetDerivativesRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.PartOfSpeech pos, bool ignoreAffixation) {
            this.appId = appId;
            this.analysis = analysis;
            this.pos = pos;
            this.ignoreAffixation = ignoreAffixation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetDerivativesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetDerivativesResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetDerivativesResponseBody Body;
        
        public GetDerivativesResponse() {
        }
        
        public GetDerivativesResponse(WCFServiceWebRole.ATK.SARF.GetDerivativesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetDerivativesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetDerivativesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public GetDerivativesResponseBody() {
        }
        
        public GetDerivativesResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetDerivativesResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.GetDerivativesResult = GetDerivativesResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDerivativesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDerivatives", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequestBody Body;
        
        public GetAllDerivativesRequest() {
        }
        
        public GetAllDerivativesRequest(WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetAllDerivativesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool ignoreAffixation;
        
        public GetAllDerivativesRequestBody() {
        }
        
        public GetAllDerivativesRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            this.appId = appId;
            this.analysis = analysis;
            this.ignoreAffixation = ignoreAffixation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllDerivativesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllDerivativesResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponseBody Body;
        
        public GetAllDerivativesResponse() {
        }
        
        public GetAllDerivativesResponse(WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class GetAllDerivativesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetAllDerivativesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public GetAllDerivativesResponseBody() {
        }
        
        public GetAllDerivativesResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode GetAllDerivativesResult, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.GetAllDerivativesResult = GetAllDerivativesResult;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DecodeFeaturesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DecodeFeatures", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequestBody Body;
        
        public DecodeFeaturesRequest() {
        }
        
        public DecodeFeaturesRequest(WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class DecodeFeaturesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long binarySyntacticFeatures;
        
        public DecodeFeaturesRequestBody() {
        }
        
        public DecodeFeaturesRequestBody(string appId, long binarySyntacticFeatures) {
            this.appId = appId;
            this.binarySyntacticFeatures = binarySyntacticFeatures;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DecodeFeaturesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DecodeFeaturesResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponseBody Body;
        
        public DecodeFeaturesResponse() {
        }
        
        public DecodeFeaturesResponse(WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class DecodeFeaturesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode DecodeFeaturesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures;
        
        public DecodeFeaturesResponseBody() {
        }
        
        public DecodeFeaturesResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode DecodeFeaturesResult, WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures) {
            this.DecodeFeaturesResult = DecodeFeaturesResult;
            this.detailedFeatures = detailedFeatures;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EncodeFeaturesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EncodeFeatures", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequestBody Body;
        
        public EncodeFeaturesRequest() {
        }
        
        public EncodeFeaturesRequest(WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class EncodeFeaturesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures;
        
        public EncodeFeaturesRequestBody() {
        }
        
        public EncodeFeaturesRequestBody(string appId, WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures) {
            this.appId = appId;
            this.detailedFeatures = detailedFeatures;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EncodeFeaturesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EncodeFeaturesResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponseBody Body;
        
        public EncodeFeaturesResponse() {
        }
        
        public EncodeFeaturesResponse(WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class EncodeFeaturesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode EncodeFeaturesResult;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public long binarySyntacticFeatures;
        
        public EncodeFeaturesResponseBody() {
        }
        
        public EncodeFeaturesResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode EncodeFeaturesResult, long binarySyntacticFeatures) {
            this.EncodeFeaturesResult = EncodeFeaturesResult;
            this.binarySyntacticFeatures = binarySyntacticFeatures;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingAnalysisRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingAnalysis", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequestBody Body;
        
        public SuggestMissingAnalysisRequest() {
        }
        
        public SuggestMissingAnalysisRequest(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingAnalysisRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string word;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        public SuggestMissingAnalysisRequestBody() {
        }
        
        public SuggestMissingAnalysisRequestBody(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            this.appId = appId;
            this.word = word;
            this.context = context;
            this.analysis = analysis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingAnalysisResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingAnalysisResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponseBody Body;
        
        public SuggestMissingAnalysisResponse() {
        }
        
        public SuggestMissingAnalysisResponse(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingAnalysisResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingAnalysisResult;
        
        public SuggestMissingAnalysisResponseBody() {
        }
        
        public SuggestMissingAnalysisResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingAnalysisResult) {
            this.SuggestMissingAnalysisResult = SuggestMissingAnalysisResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongAnalysisRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongAnalysis", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequestBody Body;
        
        public ReportWrongAnalysisRequest() {
        }
        
        public ReportWrongAnalysisRequest(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongAnalysisRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string word;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        public ReportWrongAnalysisRequestBody() {
        }
        
        public ReportWrongAnalysisRequestBody(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            this.appId = appId;
            this.word = word;
            this.context = context;
            this.analysis = analysis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongAnalysisResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongAnalysisResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponseBody Body;
        
        public ReportWrongAnalysisResponse() {
        }
        
        public ReportWrongAnalysisResponse(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongAnalysisResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongAnalysisResult;
        
        public ReportWrongAnalysisResponseBody() {
        }
        
        public ReportWrongAnalysisResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongAnalysisResult) {
            this.ReportWrongAnalysisResult = ReportWrongAnalysisResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportAnalysisSelectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportAnalysisSelection", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequestBody Body;
        
        public ReportAnalysisSelectionRequest() {
        }
        
        public ReportAnalysisSelectionRequest(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportAnalysisSelectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string word;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        public ReportAnalysisSelectionRequestBody() {
        }
        
        public ReportAnalysisSelectionRequestBody(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            this.appId = appId;
            this.word = word;
            this.context = context;
            this.analysis = analysis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportAnalysisSelectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportAnalysisSelectionResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponseBody Body;
        
        public ReportAnalysisSelectionResponse() {
        }
        
        public ReportAnalysisSelectionResponse(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportAnalysisSelectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysisSelectionResult;
        
        public ReportAnalysisSelectionResponseBody() {
        }
        
        public ReportAnalysisSelectionResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysisSelectionResult) {
            this.ReportAnalysisSelectionResult = ReportAnalysisSelectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportAnalysesSelectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportAnalysesSelection", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequestBody Body;
        
        public ReportAnalysesSelectionRequest() {
        }
        
        public ReportAnalysesSelectionRequest(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportAnalysesSelectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.ArrayOfString words;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses;
        
        public ReportAnalysesSelectionRequestBody() {
        }
        
        public ReportAnalysesSelectionRequestBody(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            this.appId = appId;
            this.words = words;
            this.context = context;
            this.analyses = analyses;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportAnalysesSelectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportAnalysesSelectionResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponseBody Body;
        
        public ReportAnalysesSelectionResponse() {
        }
        
        public ReportAnalysesSelectionResponse(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportAnalysesSelectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysesSelectionResult;
        
        public ReportAnalysesSelectionResponseBody() {
        }
        
        public ReportAnalysesSelectionResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysesSelectionResult) {
            this.ReportAnalysesSelectionResult = ReportAnalysesSelectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongSynthesizedWordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongSynthesizedWord", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequestBody Body;
        
        public ReportWrongSynthesizedWordRequest() {
        }
        
        public ReportWrongSynthesizedWordRequest(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongSynthesizedWordRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string synthesizedWord;
        
        public ReportWrongSynthesizedWordRequestBody() {
        }
        
        public ReportWrongSynthesizedWordRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string synthesizedWord) {
            this.appId = appId;
            this.analysis = analysis;
            this.context = context;
            this.synthesizedWord = synthesizedWord;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongSynthesizedWordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongSynthesizedWordResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponseBody Body;
        
        public ReportWrongSynthesizedWordResponse() {
        }
        
        public ReportWrongSynthesizedWordResponse(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongSynthesizedWordResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongSynthesizedWordResult;
        
        public ReportWrongSynthesizedWordResponseBody() {
        }
        
        public ReportWrongSynthesizedWordResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongSynthesizedWordResult) {
            this.ReportWrongSynthesizedWordResult = ReportWrongSynthesizedWordResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingDerivativeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingDerivative", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequestBody Body;
        
        public SuggestMissingDerivativeRequest() {
        }
        
        public SuggestMissingDerivativeRequest(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingDerivativeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis;
        
        public SuggestMissingDerivativeRequestBody() {
        }
        
        public SuggestMissingDerivativeRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            this.appId = appId;
            this.originalAnalysis = originalAnalysis;
            this.context = context;
            this.derivedAnalysis = derivedAnalysis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingDerivativeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingDerivativeResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponseBody Body;
        
        public SuggestMissingDerivativeResponse() {
        }
        
        public SuggestMissingDerivativeResponse(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingDerivativeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingDerivativeResult;
        
        public SuggestMissingDerivativeResponseBody() {
        }
        
        public SuggestMissingDerivativeResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingDerivativeResult) {
            this.SuggestMissingDerivativeResult = SuggestMissingDerivativeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongDerivativeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongDerivative", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequestBody Body;
        
        public ReportWrongDerivativeRequest() {
        }
        
        public ReportWrongDerivativeRequest(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongDerivativeRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis;
        
        public ReportWrongDerivativeRequestBody() {
        }
        
        public ReportWrongDerivativeRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            this.appId = appId;
            this.originalAnalysis = originalAnalysis;
            this.context = context;
            this.derivedAnalysis = derivedAnalysis;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongDerivativeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongDerivativeResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponseBody Body;
        
        public ReportWrongDerivativeResponse() {
        }
        
        public ReportWrongDerivativeResponse(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongDerivativeResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongDerivativeResult;
        
        public ReportWrongDerivativeResponseBody() {
        }
        
        public ReportWrongDerivativeResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongDerivativeResult) {
            this.ReportWrongDerivativeResult = ReportWrongDerivativeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingInflectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingInflection", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequestBody Body;
        
        public SuggestMissingInflectionRequest() {
        }
        
        public SuggestMissingInflectionRequest(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingInflectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string inflection;
        
        public SuggestMissingInflectionRequestBody() {
        }
        
        public SuggestMissingInflectionRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            this.appId = appId;
            this.analysis = analysis;
            this.context = context;
            this.inflection = inflection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingInflectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingInflectionResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponseBody Body;
        
        public SuggestMissingInflectionResponse() {
        }
        
        public SuggestMissingInflectionResponse(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingInflectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingInflectionResult;
        
        public SuggestMissingInflectionResponseBody() {
        }
        
        public SuggestMissingInflectionResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingInflectionResult) {
            this.SuggestMissingInflectionResult = SuggestMissingInflectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongInflectionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongInflection", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequestBody Body;
        
        public ReportWrongInflectionRequest() {
        }
        
        public ReportWrongInflectionRequest(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongInflectionRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string context;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string inflection;
        
        public ReportWrongInflectionRequestBody() {
        }
        
        public ReportWrongInflectionRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            this.appId = appId;
            this.analysis = analysis;
            this.context = context;
            this.inflection = inflection;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongInflectionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongInflectionResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponseBody Body;
        
        public ReportWrongInflectionResponse() {
        }
        
        public ReportWrongInflectionResponse(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongInflectionResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongInflectionResult;
        
        public ReportWrongInflectionResponseBody() {
        }
        
        public ReportWrongInflectionResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongInflectionResult) {
            this.ReportWrongInflectionResult = ReportWrongInflectionResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingPluralSingularRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingPluralSingular", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequestBody Body;
        
        public SuggestMissingPluralSingularRequest() {
        }
        
        public SuggestMissingPluralSingularRequest(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingPluralSingularRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string context;
        
        public SuggestMissingPluralSingularRequestBody() {
        }
        
        public SuggestMissingPluralSingularRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            this.appId = appId;
            this.singularAnalysis = singularAnalysis;
            this.pluralAnalysis = pluralAnalysis;
            this.context = context;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SuggestMissingPluralSingularResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="SuggestMissingPluralSingularResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponseBody Body;
        
        public SuggestMissingPluralSingularResponse() {
        }
        
        public SuggestMissingPluralSingularResponse(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class SuggestMissingPluralSingularResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingPluralSingularResult;
        
        public SuggestMissingPluralSingularResponseBody() {
        }
        
        public SuggestMissingPluralSingularResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingPluralSingularResult) {
            this.SuggestMissingPluralSingularResult = SuggestMissingPluralSingularResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongPluralSingularRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongPluralSingular", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequestBody Body;
        
        public ReportWrongPluralSingularRequest() {
        }
        
        public ReportWrongPluralSingularRequest(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongPluralSingularRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string appId;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string context;
        
        public ReportWrongPluralSingularRequestBody() {
        }
        
        public ReportWrongPluralSingularRequestBody(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            this.appId = appId;
            this.singularAnalysis = singularAnalysis;
            this.pluralAnalysis = pluralAnalysis;
            this.context = context;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ReportWrongPluralSingularResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ReportWrongPluralSingularResponse", Namespace="http://nlptoolkit.cloudapp.net", Order=0)]
        public WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponseBody Body;
        
        public ReportWrongPluralSingularResponse() {
        }
        
        public ReportWrongPluralSingularResponse(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://nlptoolkit.cloudapp.net")]
    public partial class ReportWrongPluralSingularResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongPluralSingularResult;
        
        public ReportWrongPluralSingularResponseBody() {
        }
        
        public ReportWrongPluralSingularResponseBody(WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongPluralSingularResult) {
            this.ReportWrongPluralSingularResult = ReportWrongPluralSingularResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISarfServiceChannel : WCFServiceWebRole.ATK.SARF.ISarfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SarfServiceClient : System.ServiceModel.ClientBase<WCFServiceWebRole.ATK.SARF.ISarfService>, WCFServiceWebRole.ATK.SARF.ISarfService {
        
        public SarfServiceClient() {
        }
        
        public SarfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SarfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SarfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SarfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse WCFServiceWebRole.ATK.SARF.ISarfService.AnalyzeToken(WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest request) {
            return base.Channel.AnalyzeToken(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode AnalyzeToken(string appId, string word, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest inValue = new WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.lingMode = lingMode;
            WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).AnalyzeToken(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.AnalyzeTokenResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse> WCFServiceWebRole.ATK.SARF.ISarfService.AnalyzeTokenAsync(WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest request) {
            return base.Channel.AnalyzeTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokenResponse> AnalyzeTokenAsync(string appId, string word, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest inValue = new WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.AnalyzeTokenRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.lingMode = lingMode;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).AnalyzeTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse WCFServiceWebRole.ATK.SARF.ISarfService.AnalyzeTokensArray(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest request) {
            return base.Channel.AnalyzeTokensArray(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode[] AnalyzeTokensArray(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] analyses) {
            WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest inValue = new WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.words = words;
            inValue.Body.lingMode = lingMode;
            WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).AnalyzeTokensArray(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.AnalyzeTokensArrayResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse> WCFServiceWebRole.ATK.SARF.ISarfService.AnalyzeTokensArrayAsync(WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest request) {
            return base.Channel.AnalyzeTokensArrayAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayResponse> AnalyzeTokensArrayAsync(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest inValue = new WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.AnalyzeTokensArrayRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.words = words;
            inValue.Body.lingMode = lingMode;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).AnalyzeTokensArrayAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse WCFServiceWebRole.ATK.SARF.ISarfService.SynthesizeWord(WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest request) {
            return base.Channel.SynthesizeWord(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SynthesizeWord(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis inAnalysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] outAnalyses) {
            WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest inValue = new WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SynthesizeWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inAnalysis = inAnalysis;
            inValue.Body.lingMode = lingMode;
            WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SynthesizeWord(inValue);
            outAnalyses = retVal.Body.outAnalyses;
            return retVal.Body.SynthesizeWordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SynthesizeWordAsync(WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest request) {
            return base.Channel.SynthesizeWordAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordResponse> SynthesizeWordAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis inAnalysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest inValue = new WCFServiceWebRole.ATK.SARF.SynthesizeWordRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SynthesizeWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inAnalysis = inAnalysis;
            inValue.Body.lingMode = lingMode;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SynthesizeWordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse WCFServiceWebRole.ATK.SARF.ISarfService.SynthesizeWordsArray(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest request) {
            return base.Channel.SynthesizeWordsArray(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode[] SynthesizeWordsArray(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] inAnalyses, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[][] outAnalyses) {
            WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest inValue = new WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inAnalyses = inAnalyses;
            inValue.Body.lingMode = lingMode;
            WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SynthesizeWordsArray(inValue);
            outAnalyses = retVal.Body.outAnalyses;
            return retVal.Body.SynthesizeWordsArrayResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SynthesizeWordsArrayAsync(WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest request) {
            return base.Channel.SynthesizeWordsArrayAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayResponse> SynthesizeWordsArrayAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] inAnalyses, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode) {
            WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest inValue = new WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SynthesizeWordsArrayRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.inAnalyses = inAnalyses;
            inValue.Body.lingMode = lingMode;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SynthesizeWordsArrayAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetPluralResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetPlural(WCFServiceWebRole.ATK.SARF.GetPluralRequest request) {
            return base.Channel.GetPlural(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetPlural(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.GetPluralRequest inValue = new WCFServiceWebRole.ATK.SARF.GetPluralRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetPluralRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            WCFServiceWebRole.ATK.SARF.GetPluralResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetPlural(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.GetPluralResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetPluralResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetPluralAsync(WCFServiceWebRole.ATK.SARF.GetPluralRequest request) {
            return base.Channel.GetPluralAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetPluralResponse> GetPluralAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            WCFServiceWebRole.ATK.SARF.GetPluralRequest inValue = new WCFServiceWebRole.ATK.SARF.GetPluralRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetPluralRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetPluralAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetSingularResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetSingular(WCFServiceWebRole.ATK.SARF.GetSingularRequest request) {
            return base.Channel.GetSingular(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetSingular(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.GetSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.GetSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            WCFServiceWebRole.ATK.SARF.GetSingularResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetSingular(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.GetSingularResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetSingularResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetSingularAsync(WCFServiceWebRole.ATK.SARF.GetSingularRequest request) {
            return base.Channel.GetSingularAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetSingularResponse> GetSingularAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            WCFServiceWebRole.ATK.SARF.GetSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.GetSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetSingularAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetInflectionsResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetInflections(WCFServiceWebRole.ATK.SARF.GetInflectionsRequest request) {
            return base.Channel.GetInflections(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflections(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized, out WCFServiceWebRole.ATK.SARF.ArrayOfString inflections, out int totalInflections) {
            WCFServiceWebRole.ATK.SARF.GetInflectionsRequest inValue = new WCFServiceWebRole.ATK.SARF.GetInflectionsRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetInflectionsRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.lingMode = lingMode;
            inValue.Body.diacritized = diacritized;
            WCFServiceWebRole.ATK.SARF.GetInflectionsResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetInflections(inValue);
            inflections = retVal.Body.inflections;
            totalInflections = retVal.Body.totalInflections;
            return retVal.Body.GetInflectionsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetInflectionsAsync(WCFServiceWebRole.ATK.SARF.GetInflectionsRequest request) {
            return base.Channel.GetInflectionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsResponse> GetInflectionsAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized) {
            WCFServiceWebRole.ATK.SARF.GetInflectionsRequest inValue = new WCFServiceWebRole.ATK.SARF.GetInflectionsRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetInflectionsRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.lingMode = lingMode;
            inValue.Body.diacritized = diacritized;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetInflectionsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetInflectionsEx(WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest request) {
            return base.Channel.GetInflectionsEx(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetInflectionsEx(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized, int maxInflections, int startIndex, out WCFServiceWebRole.ATK.SARF.ArrayOfString inflections, out int totalInflections) {
            WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest inValue = new WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetInflectionsExRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.lingMode = lingMode;
            inValue.Body.diacritized = diacritized;
            inValue.Body.maxInflections = maxInflections;
            inValue.Body.startIndex = startIndex;
            WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetInflectionsEx(inValue);
            inflections = retVal.Body.inflections;
            totalInflections = retVal.Body.totalInflections;
            return retVal.Body.GetInflectionsExResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetInflectionsExAsync(WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest request) {
            return base.Channel.GetInflectionsExAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetInflectionsExResponse> GetInflectionsExAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.LinguisticMode lingMode, bool diacritized, int maxInflections, int startIndex) {
            WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest inValue = new WCFServiceWebRole.ATK.SARF.GetInflectionsExRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetInflectionsExRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.lingMode = lingMode;
            inValue.Body.diacritized = diacritized;
            inValue.Body.maxInflections = maxInflections;
            inValue.Body.startIndex = startIndex;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetInflectionsExAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetDerivativesResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetDerivatives(WCFServiceWebRole.ATK.SARF.GetDerivativesRequest request) {
            return base.Channel.GetDerivatives(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetDerivatives(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.PartOfSpeech pos, bool ignoreAffixation, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.GetDerivativesRequest inValue = new WCFServiceWebRole.ATK.SARF.GetDerivativesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetDerivativesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.pos = pos;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            WCFServiceWebRole.ATK.SARF.GetDerivativesResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetDerivatives(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.GetDerivativesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetDerivativesResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetDerivativesAsync(WCFServiceWebRole.ATK.SARF.GetDerivativesRequest request) {
            return base.Channel.GetDerivativesAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetDerivativesResponse> GetDerivativesAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, WCFServiceWebRole.ATK.SARF.PartOfSpeech pos, bool ignoreAffixation) {
            WCFServiceWebRole.ATK.SARF.GetDerivativesRequest inValue = new WCFServiceWebRole.ATK.SARF.GetDerivativesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetDerivativesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.pos = pos;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetDerivativesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse WCFServiceWebRole.ATK.SARF.ISarfService.GetAllDerivatives(WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest request) {
            return base.Channel.GetAllDerivatives(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode GetAllDerivatives(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation, out WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest inValue = new WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetAllDerivatives(inValue);
            analyses = retVal.Body.analyses;
            return retVal.Body.GetAllDerivativesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse> WCFServiceWebRole.ATK.SARF.ISarfService.GetAllDerivativesAsync(WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest request) {
            return base.Channel.GetAllDerivativesAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.GetAllDerivativesResponse> GetAllDerivativesAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, bool ignoreAffixation) {
            WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest inValue = new WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.GetAllDerivativesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.ignoreAffixation = ignoreAffixation;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).GetAllDerivativesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse WCFServiceWebRole.ATK.SARF.ISarfService.DecodeFeatures(WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest request) {
            return base.Channel.DecodeFeatures(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode DecodeFeatures(string appId, long binarySyntacticFeatures, out WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures) {
            WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest inValue = new WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.binarySyntacticFeatures = binarySyntacticFeatures;
            WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).DecodeFeatures(inValue);
            detailedFeatures = retVal.Body.detailedFeatures;
            return retVal.Body.DecodeFeaturesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse> WCFServiceWebRole.ATK.SARF.ISarfService.DecodeFeaturesAsync(WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest request) {
            return base.Channel.DecodeFeaturesAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.DecodeFeaturesResponse> DecodeFeaturesAsync(string appId, long binarySyntacticFeatures) {
            WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest inValue = new WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.DecodeFeaturesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.binarySyntacticFeatures = binarySyntacticFeatures;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).DecodeFeaturesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse WCFServiceWebRole.ATK.SARF.ISarfService.EncodeFeatures(WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest request) {
            return base.Channel.EncodeFeatures(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode EncodeFeatures(string appId, WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures, out long binarySyntacticFeatures) {
            WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest inValue = new WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.detailedFeatures = detailedFeatures;
            WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).EncodeFeatures(inValue);
            binarySyntacticFeatures = retVal.Body.binarySyntacticFeatures;
            return retVal.Body.EncodeFeaturesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse> WCFServiceWebRole.ATK.SARF.ISarfService.EncodeFeaturesAsync(WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest request) {
            return base.Channel.EncodeFeaturesAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.EncodeFeaturesResponse> EncodeFeaturesAsync(string appId, WCFServiceWebRole.ATK.SARF.MorphoSyntacticFeatures detailedFeatures) {
            WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest inValue = new WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.EncodeFeaturesRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.detailedFeatures = detailedFeatures;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).EncodeFeaturesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingAnalysis(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest request) {
            return base.Channel.SuggestMissingAnalysis(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingAnalysis(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingAnalysis(inValue);
            return retVal.Body.SuggestMissingAnalysisResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingAnalysisAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest request) {
            return base.Channel.SuggestMissingAnalysisAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisResponse> SuggestMissingAnalysisAsync(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingAnalysisRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingAnalysisAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongAnalysis(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest request) {
            return base.Channel.ReportWrongAnalysis(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongAnalysis(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongAnalysis(inValue);
            return retVal.Body.ReportWrongAnalysisResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongAnalysisAsync(WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest request) {
            return base.Channel.ReportWrongAnalysisAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisResponse> ReportWrongAnalysisAsync(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongAnalysisRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongAnalysisAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportAnalysisSelection(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest request) {
            return base.Channel.ReportAnalysisSelection(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysisSelection(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportAnalysisSelection(inValue);
            return retVal.Body.ReportAnalysisSelectionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportAnalysisSelectionAsync(WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest request) {
            return base.Channel.ReportAnalysisSelectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionResponse> ReportAnalysisSelectionAsync(string appId, string word, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis) {
            WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportAnalysisSelectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.word = word;
            inValue.Body.context = context;
            inValue.Body.analysis = analysis;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportAnalysisSelectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportAnalysesSelection(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest request) {
            return base.Channel.ReportAnalysesSelection(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportAnalysesSelection(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.words = words;
            inValue.Body.context = context;
            inValue.Body.analyses = analyses;
            WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportAnalysesSelection(inValue);
            return retVal.Body.ReportAnalysesSelectionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportAnalysesSelectionAsync(WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest request) {
            return base.Channel.ReportAnalysesSelectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionResponse> ReportAnalysesSelectionAsync(string appId, WCFServiceWebRole.ATK.SARF.ArrayOfString words, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis[] analyses) {
            WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportAnalysesSelectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.words = words;
            inValue.Body.context = context;
            inValue.Body.analyses = analyses;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportAnalysesSelectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongSynthesizedWord(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest request) {
            return base.Channel.ReportWrongSynthesizedWord(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongSynthesizedWord(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string synthesizedWord) {
            WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.synthesizedWord = synthesizedWord;
            WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongSynthesizedWord(inValue);
            return retVal.Body.ReportWrongSynthesizedWordResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongSynthesizedWordAsync(WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest request) {
            return base.Channel.ReportWrongSynthesizedWordAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordResponse> ReportWrongSynthesizedWordAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string synthesizedWord) {
            WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongSynthesizedWordRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.synthesizedWord = synthesizedWord;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongSynthesizedWordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingDerivative(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest request) {
            return base.Channel.SuggestMissingDerivative(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingDerivative(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.originalAnalysis = originalAnalysis;
            inValue.Body.context = context;
            inValue.Body.derivedAnalysis = derivedAnalysis;
            WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingDerivative(inValue);
            return retVal.Body.SuggestMissingDerivativeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingDerivativeAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest request) {
            return base.Channel.SuggestMissingDerivativeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeResponse> SuggestMissingDerivativeAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingDerivativeRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.originalAnalysis = originalAnalysis;
            inValue.Body.context = context;
            inValue.Body.derivedAnalysis = derivedAnalysis;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingDerivativeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongDerivative(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest request) {
            return base.Channel.ReportWrongDerivative(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongDerivative(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.originalAnalysis = originalAnalysis;
            inValue.Body.context = context;
            inValue.Body.derivedAnalysis = derivedAnalysis;
            WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongDerivative(inValue);
            return retVal.Body.ReportWrongDerivativeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongDerivativeAsync(WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest request) {
            return base.Channel.ReportWrongDerivativeAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeResponse> ReportWrongDerivativeAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis originalAnalysis, string context, WCFServiceWebRole.ATK.SARF.SarfAnalysis derivedAnalysis) {
            WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongDerivativeRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.originalAnalysis = originalAnalysis;
            inValue.Body.context = context;
            inValue.Body.derivedAnalysis = derivedAnalysis;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongDerivativeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingInflection(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest request) {
            return base.Channel.SuggestMissingInflection(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingInflection(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.inflection = inflection;
            WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingInflection(inValue);
            return retVal.Body.SuggestMissingInflectionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingInflectionAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest request) {
            return base.Channel.SuggestMissingInflectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionResponse> SuggestMissingInflectionAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingInflectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.inflection = inflection;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingInflectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongInflection(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest request) {
            return base.Channel.ReportWrongInflection(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongInflection(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.inflection = inflection;
            WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongInflection(inValue);
            return retVal.Body.ReportWrongInflectionResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongInflectionAsync(WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest request) {
            return base.Channel.ReportWrongInflectionAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongInflectionResponse> ReportWrongInflectionAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis analysis, string context, string inflection) {
            WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongInflectionRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.analysis = analysis;
            inValue.Body.context = context;
            inValue.Body.inflection = inflection;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongInflectionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingPluralSingular(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest request) {
            return base.Channel.SuggestMissingPluralSingular(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode SuggestMissingPluralSingular(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.singularAnalysis = singularAnalysis;
            inValue.Body.pluralAnalysis = pluralAnalysis;
            inValue.Body.context = context;
            WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingPluralSingular(inValue);
            return retVal.Body.SuggestMissingPluralSingularResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse> WCFServiceWebRole.ATK.SARF.ISarfService.SuggestMissingPluralSingularAsync(WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest request) {
            return base.Channel.SuggestMissingPluralSingularAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularResponse> SuggestMissingPluralSingularAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.SuggestMissingPluralSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.singularAnalysis = singularAnalysis;
            inValue.Body.pluralAnalysis = pluralAnalysis;
            inValue.Body.context = context;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).SuggestMissingPluralSingularAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongPluralSingular(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest request) {
            return base.Channel.ReportWrongPluralSingular(request);
        }
        
        public WCFServiceWebRole.ATK.SARF.SarfErrorCode ReportWrongPluralSingular(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.singularAnalysis = singularAnalysis;
            inValue.Body.pluralAnalysis = pluralAnalysis;
            inValue.Body.context = context;
            WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse retVal = ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongPluralSingular(inValue);
            return retVal.Body.ReportWrongPluralSingularResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse> WCFServiceWebRole.ATK.SARF.ISarfService.ReportWrongPluralSingularAsync(WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest request) {
            return base.Channel.ReportWrongPluralSingularAsync(request);
        }
        
        public System.Threading.Tasks.Task<WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularResponse> ReportWrongPluralSingularAsync(string appId, WCFServiceWebRole.ATK.SARF.SarfAnalysis singularAnalysis, WCFServiceWebRole.ATK.SARF.SarfAnalysis pluralAnalysis, string context) {
            WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest inValue = new WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequest();
            inValue.Body = new WCFServiceWebRole.ATK.SARF.ReportWrongPluralSingularRequestBody();
            inValue.Body.appId = appId;
            inValue.Body.singularAnalysis = singularAnalysis;
            inValue.Body.pluralAnalysis = pluralAnalysis;
            inValue.Body.context = context;
            return ((WCFServiceWebRole.ATK.SARF.ISarfService)(this)).ReportWrongPluralSingularAsync(inValue);
        }
    }
}
